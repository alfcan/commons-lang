/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package randoop.Streams;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream29 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream30 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream31 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream32 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass33 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector34 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass33);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer35 = strArrayCollector34.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet36 = strArrayCollector34.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier37 = strArrayCollector34.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction38 = strArrayCollector34.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator39 = strArrayCollector34.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer40 = strArrayCollector34.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer41 = strArrayCollector34.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction42 = strArrayCollector34.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector44 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector34, strCollectorBinaryOperator43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNull(strCollectorStream29);
        org.junit.Assert.assertNull(strCollectorStream30);
        org.junit.Assert.assertNull(strCollectorStream31);
        org.junit.Assert.assertNull(strCollectorStream32);
        org.junit.Assert.assertNotNull(strListBiConsumer35);
        org.junit.Assert.assertNotNull(characteristicsSet36);
        org.junit.Assert.assertNotNull(strListSupplier37);
        org.junit.Assert.assertNotNull(strListFunction38);
        org.junit.Assert.assertNotNull(strListBinaryOperator39);
        org.junit.Assert.assertNotNull(strListBiConsumer40);
        org.junit.Assert.assertNotNull(strListBiConsumer41);
        org.junit.Assert.assertNotNull(strListFunction42);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass15 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator4 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream6 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet5);
        java.lang.Class<?> wildcardClass7 = characteristicsSet5.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBinaryOperator4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsFailableStream6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass12 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector13 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass12);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet14 = strArrayCollector13.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction15 = strArrayCollector13.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction16 = strArrayCollector13.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction17 = strArrayCollector13.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction18 = strArrayCollector13.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector20 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector13, strCollectorBinaryOperator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNotNull(characteristicsSet14);
        org.junit.Assert.assertNotNull(strListFunction15);
        org.junit.Assert.assertNotNull(strListFunction16);
        org.junit.Assert.assertNotNull(strListFunction17);
        org.junit.Assert.assertNotNull(strListFunction18);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass9 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector10 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass9);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector10.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector10.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector10.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector10.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector10.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet16 = strArrayCollector10.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet17 = strArrayCollector10.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector19 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector10, strCollectorBinaryOperator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(strListFunction14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
        org.junit.Assert.assertNotNull(characteristicsSet16);
        org.junit.Assert.assertNotNull(characteristicsSet17);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator2 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBinaryOperator2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass14 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector15 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass14);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer16 = strArrayCollector15.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet17 = strArrayCollector15.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator18 = strArrayCollector15.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier19 = strArrayCollector15.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer20 = strArrayCollector15.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector22 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector15, strCollectorBinaryOperator21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNotNull(strListBiConsumer16);
        org.junit.Assert.assertNotNull(characteristicsSet17);
        org.junit.Assert.assertNotNull(strListBinaryOperator18);
        org.junit.Assert.assertNotNull(strListSupplier19);
        org.junit.Assert.assertNotNull(strListBiConsumer20);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass4 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector5 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass4);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector5.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector5.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector5.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector5.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector5.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector5.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector5.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector5.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector5.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector5.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction16 = strArrayCollector5.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet17 = strArrayCollector5.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector19 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector5, strCollectorBinaryOperator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(strListFunction16);
        org.junit.Assert.assertNotNull(characteristicsSet17);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream29 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream30 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream31 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass32 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector33 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass32);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer34 = strArrayCollector33.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet35 = strArrayCollector33.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction36 = strArrayCollector33.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator37 = strArrayCollector33.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction38 = strArrayCollector33.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier39 = strArrayCollector33.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier40 = strArrayCollector33.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator41 = strArrayCollector33.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier42 = strArrayCollector33.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator43 = strArrayCollector33.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer44 = strArrayCollector33.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet45 = strArrayCollector33.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector47 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector33, strCollectorBinaryOperator46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNull(strCollectorStream29);
        org.junit.Assert.assertNull(strCollectorStream30);
        org.junit.Assert.assertNull(strCollectorStream31);
        org.junit.Assert.assertNotNull(strListBiConsumer34);
        org.junit.Assert.assertNotNull(characteristicsSet35);
        org.junit.Assert.assertNotNull(strListFunction36);
        org.junit.Assert.assertNotNull(strListBinaryOperator37);
        org.junit.Assert.assertNotNull(strListFunction38);
        org.junit.Assert.assertNotNull(strListSupplier39);
        org.junit.Assert.assertNotNull(strListSupplier40);
        org.junit.Assert.assertNotNull(strListBinaryOperator41);
        org.junit.Assert.assertNotNull(strListSupplier42);
        org.junit.Assert.assertNotNull(strListBinaryOperator43);
        org.junit.Assert.assertNotNull(strListBiConsumer44);
        org.junit.Assert.assertNotNull(characteristicsSet45);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass17 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector18 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass17);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet19 = strArrayCollector18.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer20 = strArrayCollector18.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator21 = strArrayCollector18.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction22 = strArrayCollector18.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction23 = strArrayCollector18.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction24 = strArrayCollector18.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier25 = strArrayCollector18.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector27 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector18, strCollectorBinaryOperator26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNotNull(characteristicsSet19);
        org.junit.Assert.assertNotNull(strListBiConsumer20);
        org.junit.Assert.assertNotNull(strListBinaryOperator21);
        org.junit.Assert.assertNotNull(strListFunction22);
        org.junit.Assert.assertNotNull(strListFunction23);
        org.junit.Assert.assertNotNull(strListFunction24);
        org.junit.Assert.assertNotNull(strListSupplier25);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream8 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet7);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream9 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsFailableStream8);
        org.junit.Assert.assertNotNull(characteristicsFailableStream9);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.lang.Class<?> wildcardClass7 = strListSupplier6.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListFunction10);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.lang.Class<?> wildcardClass12 = strListFunction11.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.lang.Class<?> wildcardClass10 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListFunction12);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass27 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector28 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass27);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer29 = strArrayCollector28.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet30 = strArrayCollector28.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction31 = strArrayCollector28.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator32 = strArrayCollector28.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction33 = strArrayCollector28.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier34 = strArrayCollector28.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet35 = strArrayCollector28.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet36 = strArrayCollector28.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator37 = strArrayCollector28.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet38 = strArrayCollector28.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector40 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector28, strCollectorBinaryOperator39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNotNull(strListBiConsumer29);
        org.junit.Assert.assertNotNull(characteristicsSet30);
        org.junit.Assert.assertNotNull(strListFunction31);
        org.junit.Assert.assertNotNull(strListBinaryOperator32);
        org.junit.Assert.assertNotNull(strListFunction33);
        org.junit.Assert.assertNotNull(strListSupplier34);
        org.junit.Assert.assertNotNull(characteristicsSet35);
        org.junit.Assert.assertNotNull(characteristicsSet36);
        org.junit.Assert.assertNotNull(strListBinaryOperator37);
        org.junit.Assert.assertNotNull(characteristicsSet38);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream8 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet7);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream9 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsFailableStream8);
        org.junit.Assert.assertNotNull(characteristicsFailableStream9);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListSupplier11);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListSupplier7);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream29 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream30 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream31 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream32 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream33 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream34 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass35 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector36 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass35);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet37 = strArrayCollector36.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction38 = strArrayCollector36.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction39 = strArrayCollector36.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction40 = strArrayCollector36.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer41 = strArrayCollector36.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator42 = strArrayCollector36.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet43 = strArrayCollector36.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer44 = strArrayCollector36.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer45 = strArrayCollector36.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector47 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector36, strCollectorBinaryOperator46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNull(strCollectorStream29);
        org.junit.Assert.assertNull(strCollectorStream30);
        org.junit.Assert.assertNull(strCollectorStream31);
        org.junit.Assert.assertNull(strCollectorStream32);
        org.junit.Assert.assertNull(strCollectorStream33);
        org.junit.Assert.assertNull(strCollectorStream34);
        org.junit.Assert.assertNotNull(characteristicsSet37);
        org.junit.Assert.assertNotNull(strListFunction38);
        org.junit.Assert.assertNotNull(strListFunction39);
        org.junit.Assert.assertNotNull(strListFunction40);
        org.junit.Assert.assertNotNull(strListBiConsumer41);
        org.junit.Assert.assertNotNull(strListBinaryOperator42);
        org.junit.Assert.assertNotNull(characteristicsSet43);
        org.junit.Assert.assertNotNull(strListBiConsumer44);
        org.junit.Assert.assertNotNull(strListBiConsumer45);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass14 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector15 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass14);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet16 = strArrayCollector15.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction17 = strArrayCollector15.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction18 = strArrayCollector15.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction19 = strArrayCollector15.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier20 = strArrayCollector15.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator21 = strArrayCollector15.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier22 = strArrayCollector15.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet23 = strArrayCollector15.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction24 = strArrayCollector15.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer25 = strArrayCollector15.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer26 = strArrayCollector15.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction27 = strArrayCollector15.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction28 = strArrayCollector15.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector30 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector15, strCollectorBinaryOperator29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNotNull(characteristicsSet16);
        org.junit.Assert.assertNotNull(strListFunction17);
        org.junit.Assert.assertNotNull(strListFunction18);
        org.junit.Assert.assertNotNull(strListFunction19);
        org.junit.Assert.assertNotNull(strListSupplier20);
        org.junit.Assert.assertNotNull(strListBinaryOperator21);
        org.junit.Assert.assertNotNull(strListSupplier22);
        org.junit.Assert.assertNotNull(characteristicsSet23);
        org.junit.Assert.assertNotNull(strListFunction24);
        org.junit.Assert.assertNotNull(strListBiConsumer25);
        org.junit.Assert.assertNotNull(strListBiConsumer26);
        org.junit.Assert.assertNotNull(strListFunction27);
        org.junit.Assert.assertNotNull(strListFunction28);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass16 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector17 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass16);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet18 = strArrayCollector17.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction19 = strArrayCollector17.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet20 = strArrayCollector17.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet21 = strArrayCollector17.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator22 = strArrayCollector17.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator23 = strArrayCollector17.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator24 = strArrayCollector17.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer25 = strArrayCollector17.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector27 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector17, strCollectorBinaryOperator26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNotNull(characteristicsSet18);
        org.junit.Assert.assertNotNull(strListFunction19);
        org.junit.Assert.assertNotNull(characteristicsSet20);
        org.junit.Assert.assertNotNull(characteristicsSet21);
        org.junit.Assert.assertNotNull(strListBinaryOperator22);
        org.junit.Assert.assertNotNull(strListBinaryOperator23);
        org.junit.Assert.assertNotNull(strListBinaryOperator24);
        org.junit.Assert.assertNotNull(strListBiConsumer25);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer16 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet17 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListFunction14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(strListBiConsumer16);
        org.junit.Assert.assertNotNull(characteristicsSet17);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector10 = null;
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector12 = strCollectorFailableStream1.reduce(strCollector10, strCollectorBinaryOperator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.lang.Class<?> wildcardClass9 = characteristicsSet8.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream10 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet9);
        java.lang.Class<?> wildcardClass11 = characteristicsFailableStream10.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsFailableStream10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.lang.Class<?> wildcardClass13 = strListFunction12.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass24 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector25 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass24);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction26 = strArrayCollector25.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction27 = strArrayCollector25.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet28 = strArrayCollector25.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction29 = strArrayCollector25.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier30 = strArrayCollector25.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet31 = strArrayCollector25.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector33 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector25, strCollectorBinaryOperator32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNotNull(strListFunction26);
        org.junit.Assert.assertNotNull(strListFunction27);
        org.junit.Assert.assertNotNull(characteristicsSet28);
        org.junit.Assert.assertNotNull(strListFunction29);
        org.junit.Assert.assertNotNull(strListSupplier30);
        org.junit.Assert.assertNotNull(characteristicsSet31);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListFunction11);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet16 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator17 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(characteristicsSet16);
        org.junit.Assert.assertNotNull(strListBinaryOperator17);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.lang.Class<java.lang.String> strClass2 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector3 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass2);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector3.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector3.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector3.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector3.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector3.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector3.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector3.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector3.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector3.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector14 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector3, strCollectorBinaryOperator13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass24 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector25 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass24);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer26 = strArrayCollector25.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet27 = strArrayCollector25.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction28 = strArrayCollector25.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator29 = strArrayCollector25.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction30 = strArrayCollector25.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier31 = strArrayCollector25.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet32 = strArrayCollector25.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet33 = strArrayCollector25.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer34 = strArrayCollector25.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet35 = strArrayCollector25.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet36 = strArrayCollector25.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier37 = strArrayCollector25.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator38 = strArrayCollector25.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector40 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector25, strCollectorBinaryOperator39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNotNull(strListBiConsumer26);
        org.junit.Assert.assertNotNull(characteristicsSet27);
        org.junit.Assert.assertNotNull(strListFunction28);
        org.junit.Assert.assertNotNull(strListBinaryOperator29);
        org.junit.Assert.assertNotNull(strListFunction30);
        org.junit.Assert.assertNotNull(strListSupplier31);
        org.junit.Assert.assertNotNull(characteristicsSet32);
        org.junit.Assert.assertNotNull(characteristicsSet33);
        org.junit.Assert.assertNotNull(strListBiConsumer34);
        org.junit.Assert.assertNotNull(characteristicsSet35);
        org.junit.Assert.assertNotNull(characteristicsSet36);
        org.junit.Assert.assertNotNull(strListSupplier37);
        org.junit.Assert.assertNotNull(strListBinaryOperator38);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass22 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector23 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass22);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer24 = strArrayCollector23.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet25 = strArrayCollector23.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet26 = strArrayCollector23.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet27 = strArrayCollector23.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet28 = strArrayCollector23.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction29 = strArrayCollector23.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer30 = strArrayCollector23.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator31 = strArrayCollector23.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet32 = strArrayCollector23.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector34 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector23, strCollectorBinaryOperator33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNotNull(strListBiConsumer24);
        org.junit.Assert.assertNotNull(characteristicsSet25);
        org.junit.Assert.assertNotNull(characteristicsSet26);
        org.junit.Assert.assertNotNull(characteristicsSet27);
        org.junit.Assert.assertNotNull(characteristicsSet28);
        org.junit.Assert.assertNotNull(strListFunction29);
        org.junit.Assert.assertNotNull(strListBiConsumer30);
        org.junit.Assert.assertNotNull(strListBinaryOperator31);
        org.junit.Assert.assertNotNull(characteristicsSet32);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream29 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream30 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass31 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector32 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass31);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet33 = strArrayCollector32.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction34 = strArrayCollector32.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet35 = strArrayCollector32.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier36 = strArrayCollector32.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction37 = strArrayCollector32.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator38 = strArrayCollector32.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet39 = strArrayCollector32.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector41 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector32, strCollectorBinaryOperator40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNull(strCollectorStream29);
        org.junit.Assert.assertNull(strCollectorStream30);
        org.junit.Assert.assertNotNull(characteristicsSet33);
        org.junit.Assert.assertNotNull(strListFunction34);
        org.junit.Assert.assertNotNull(characteristicsSet35);
        org.junit.Assert.assertNotNull(strListSupplier36);
        org.junit.Assert.assertNotNull(strListFunction37);
        org.junit.Assert.assertNotNull(strListBinaryOperator38);
        org.junit.Assert.assertNotNull(characteristicsSet39);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass19 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector20 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass19);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer21 = strArrayCollector20.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet22 = strArrayCollector20.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction23 = strArrayCollector20.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator24 = strArrayCollector20.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction25 = strArrayCollector20.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier26 = strArrayCollector20.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier27 = strArrayCollector20.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator28 = strArrayCollector20.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator29 = strArrayCollector20.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator30 = strArrayCollector20.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier31 = strArrayCollector20.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector33 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector20, strCollectorBinaryOperator32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNotNull(strListBiConsumer21);
        org.junit.Assert.assertNotNull(characteristicsSet22);
        org.junit.Assert.assertNotNull(strListFunction23);
        org.junit.Assert.assertNotNull(strListBinaryOperator24);
        org.junit.Assert.assertNotNull(strListFunction25);
        org.junit.Assert.assertNotNull(strListSupplier26);
        org.junit.Assert.assertNotNull(strListSupplier27);
        org.junit.Assert.assertNotNull(strListBinaryOperator28);
        org.junit.Assert.assertNotNull(strListBinaryOperator29);
        org.junit.Assert.assertNotNull(strListBinaryOperator30);
        org.junit.Assert.assertNotNull(strListSupplier31);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream11 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet10);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsFailableStream11);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListFunction10);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListSupplier11);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListSupplier7);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass27 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector28 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass27);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer29 = strArrayCollector28.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet30 = strArrayCollector28.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier31 = strArrayCollector28.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector33 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector28, strCollectorBinaryOperator32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNotNull(strListBiConsumer29);
        org.junit.Assert.assertNotNull(characteristicsSet30);
        org.junit.Assert.assertNotNull(strListSupplier31);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass10 = strListBinaryOperator9.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream10 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsFailableStream10);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet14 = strArrayCollector1.characteristics();
        java.lang.Class<?> wildcardClass15 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListSupplier12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(characteristicsSet14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(strListSupplier12);
        org.junit.Assert.assertNotNull(strListFunction13);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass24 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector25 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass24);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer26 = strArrayCollector25.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet27 = strArrayCollector25.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction28 = strArrayCollector25.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator29 = strArrayCollector25.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction30 = strArrayCollector25.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier31 = strArrayCollector25.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet32 = strArrayCollector25.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet33 = strArrayCollector25.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator34 = strArrayCollector25.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet35 = strArrayCollector25.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction36 = strArrayCollector25.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet37 = strArrayCollector25.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer38 = strArrayCollector25.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector40 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector25, strCollectorBinaryOperator39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNotNull(strListBiConsumer26);
        org.junit.Assert.assertNotNull(characteristicsSet27);
        org.junit.Assert.assertNotNull(strListFunction28);
        org.junit.Assert.assertNotNull(strListBinaryOperator29);
        org.junit.Assert.assertNotNull(strListFunction30);
        org.junit.Assert.assertNotNull(strListSupplier31);
        org.junit.Assert.assertNotNull(characteristicsSet32);
        org.junit.Assert.assertNotNull(characteristicsSet33);
        org.junit.Assert.assertNotNull(strListBinaryOperator34);
        org.junit.Assert.assertNotNull(characteristicsSet35);
        org.junit.Assert.assertNotNull(strListFunction36);
        org.junit.Assert.assertNotNull(characteristicsSet37);
        org.junit.Assert.assertNotNull(strListBiConsumer38);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction16 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
        org.junit.Assert.assertNotNull(strListFunction16);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass11 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector12 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass11);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector12.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet14 = strArrayCollector12.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction15 = strArrayCollector12.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator16 = strArrayCollector12.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction17 = strArrayCollector12.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier18 = strArrayCollector12.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet19 = strArrayCollector12.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet20 = strArrayCollector12.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier21 = strArrayCollector12.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer22 = strArrayCollector12.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier23 = strArrayCollector12.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector25 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector12, strCollectorBinaryOperator24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(characteristicsSet14);
        org.junit.Assert.assertNotNull(strListFunction15);
        org.junit.Assert.assertNotNull(strListBinaryOperator16);
        org.junit.Assert.assertNotNull(strListFunction17);
        org.junit.Assert.assertNotNull(strListSupplier18);
        org.junit.Assert.assertNotNull(characteristicsSet19);
        org.junit.Assert.assertNotNull(characteristicsSet20);
        org.junit.Assert.assertNotNull(strListSupplier21);
        org.junit.Assert.assertNotNull(strListBiConsumer22);
        org.junit.Assert.assertNotNull(strListSupplier23);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListFunction10);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListFunction13);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.lang.Class<?> wildcardClass8 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator4 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListBinaryOperator4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListSupplier7);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier3 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.lang.Class<?> wildcardClass9 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(strListSupplier3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream12 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet11);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(characteristicsFailableStream12);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListFunction12);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListFunction12);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass18 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector19 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass18);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet20 = strArrayCollector19.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction21 = strArrayCollector19.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction22 = strArrayCollector19.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator23 = strArrayCollector19.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier24 = strArrayCollector19.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer25 = strArrayCollector19.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector27 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector19, strCollectorBinaryOperator26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNotNull(characteristicsSet20);
        org.junit.Assert.assertNotNull(strListFunction21);
        org.junit.Assert.assertNotNull(strListFunction22);
        org.junit.Assert.assertNotNull(strListBinaryOperator23);
        org.junit.Assert.assertNotNull(strListSupplier24);
        org.junit.Assert.assertNotNull(strListBiConsumer25);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream12 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet11);
        java.lang.Class<?> wildcardClass13 = characteristicsFailableStream12.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(characteristicsFailableStream12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.lang.Class<?> wildcardClass12 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.lang.Class<?> wildcardClass11 = characteristicsSet10.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream11 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet10);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsFailableStream11);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass6 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector7 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass6);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector7.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector7.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector7.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector7.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector7.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector14 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector7, strCollectorBinaryOperator13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass12 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector13 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass12);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer14 = strArrayCollector13.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector13.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction16 = strArrayCollector13.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator17 = strArrayCollector13.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction18 = strArrayCollector13.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier19 = strArrayCollector13.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet20 = strArrayCollector13.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet21 = strArrayCollector13.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator22 = strArrayCollector13.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet23 = strArrayCollector13.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction24 = strArrayCollector13.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer25 = strArrayCollector13.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector27 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector13, strCollectorBinaryOperator26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNotNull(strListBiConsumer14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(strListFunction16);
        org.junit.Assert.assertNotNull(strListBinaryOperator17);
        org.junit.Assert.assertNotNull(strListFunction18);
        org.junit.Assert.assertNotNull(strListSupplier19);
        org.junit.Assert.assertNotNull(characteristicsSet20);
        org.junit.Assert.assertNotNull(characteristicsSet21);
        org.junit.Assert.assertNotNull(strListBinaryOperator22);
        org.junit.Assert.assertNotNull(characteristicsSet23);
        org.junit.Assert.assertNotNull(strListFunction24);
        org.junit.Assert.assertNotNull(strListBiConsumer25);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream8 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet7);
        java.lang.Class<?> wildcardClass9 = characteristicsSet7.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsFailableStream8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet14 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier15 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier16 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(characteristicsSet14);
        org.junit.Assert.assertNotNull(strListSupplier15);
        org.junit.Assert.assertNotNull(strListSupplier16);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass26 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector27 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass26);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet28 = strArrayCollector27.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction29 = strArrayCollector27.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction30 = strArrayCollector27.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction31 = strArrayCollector27.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer32 = strArrayCollector27.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier33 = strArrayCollector27.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator34 = strArrayCollector27.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector36 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector27, strCollectorBinaryOperator35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNotNull(characteristicsSet28);
        org.junit.Assert.assertNotNull(strListFunction29);
        org.junit.Assert.assertNotNull(strListFunction30);
        org.junit.Assert.assertNotNull(strListFunction31);
        org.junit.Assert.assertNotNull(strListBiConsumer32);
        org.junit.Assert.assertNotNull(strListSupplier33);
        org.junit.Assert.assertNotNull(strListBinaryOperator34);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier2 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListSupplier2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.lang.Class<?> wildcardClass12 = strListBiConsumer11.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator16 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet17 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListFunction14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
        org.junit.Assert.assertNotNull(strListBinaryOperator16);
        org.junit.Assert.assertNotNull(characteristicsSet17);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListFunction10);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier2 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream7 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsFailableStream7);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.lang.Class<?> wildcardClass13 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass7 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector8 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass7);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector8.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector8.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector8.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector8.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector8.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer14 = strArrayCollector8.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector8.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer16 = strArrayCollector8.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier17 = strArrayCollector8.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction18 = strArrayCollector8.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector20 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector8, strCollectorBinaryOperator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
        org.junit.Assert.assertNotNull(strListBiConsumer14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
        org.junit.Assert.assertNotNull(strListBiConsumer16);
        org.junit.Assert.assertNotNull(strListSupplier17);
        org.junit.Assert.assertNotNull(strListFunction18);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass21 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector22 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass21);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction23 = strArrayCollector22.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator24 = strArrayCollector22.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet25 = strArrayCollector22.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier26 = strArrayCollector22.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction27 = strArrayCollector22.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer28 = strArrayCollector22.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer29 = strArrayCollector22.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer30 = strArrayCollector22.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet31 = strArrayCollector22.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet32 = strArrayCollector22.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer33 = strArrayCollector22.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector35 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector22, strCollectorBinaryOperator34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNotNull(strListFunction23);
        org.junit.Assert.assertNotNull(strListBinaryOperator24);
        org.junit.Assert.assertNotNull(characteristicsSet25);
        org.junit.Assert.assertNotNull(strListSupplier26);
        org.junit.Assert.assertNotNull(strListFunction27);
        org.junit.Assert.assertNotNull(strListBiConsumer28);
        org.junit.Assert.assertNotNull(strListBiConsumer29);
        org.junit.Assert.assertNotNull(strListBiConsumer30);
        org.junit.Assert.assertNotNull(characteristicsSet31);
        org.junit.Assert.assertNotNull(characteristicsSet32);
        org.junit.Assert.assertNotNull(strListBiConsumer33);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream11 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet10);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream12 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet10);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream13 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet10);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsFailableStream11);
        org.junit.Assert.assertNotNull(characteristicsFailableStream12);
        org.junit.Assert.assertNotNull(characteristicsFailableStream13);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream13 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet12);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream14 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet12);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(characteristicsFailableStream13);
        org.junit.Assert.assertNotNull(characteristicsFailableStream14);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass28 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector29 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass28);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet30 = strArrayCollector29.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction31 = strArrayCollector29.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction32 = strArrayCollector29.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction33 = strArrayCollector29.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer34 = strArrayCollector29.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet35 = strArrayCollector29.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer36 = strArrayCollector29.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer37 = strArrayCollector29.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction38 = strArrayCollector29.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier39 = strArrayCollector29.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector41 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector29, strCollectorBinaryOperator40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNotNull(characteristicsSet30);
        org.junit.Assert.assertNotNull(strListFunction31);
        org.junit.Assert.assertNotNull(strListFunction32);
        org.junit.Assert.assertNotNull(strListFunction33);
        org.junit.Assert.assertNotNull(strListBiConsumer34);
        org.junit.Assert.assertNotNull(characteristicsSet35);
        org.junit.Assert.assertNotNull(strListBiConsumer36);
        org.junit.Assert.assertNotNull(strListBiConsumer37);
        org.junit.Assert.assertNotNull(strListFunction38);
        org.junit.Assert.assertNotNull(strListSupplier39);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListSupplier11);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier15 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer16 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListSupplier15);
        org.junit.Assert.assertNotNull(strListBiConsumer16);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream8 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsFailableStream8);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(strListSupplier14);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream9 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet8);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream10 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet8);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream11 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet8);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream12 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsFailableStream9);
        org.junit.Assert.assertNotNull(characteristicsFailableStream10);
        org.junit.Assert.assertNotNull(characteristicsFailableStream11);
        org.junit.Assert.assertNotNull(characteristicsFailableStream12);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListSupplier6);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator15 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier16 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListBinaryOperator15);
        org.junit.Assert.assertNotNull(strListSupplier16);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListSupplier12);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream29 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream30 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass31 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector32 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass31);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer33 = strArrayCollector32.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet34 = strArrayCollector32.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction35 = strArrayCollector32.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator36 = strArrayCollector32.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction37 = strArrayCollector32.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier38 = strArrayCollector32.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier39 = strArrayCollector32.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator40 = strArrayCollector32.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer41 = strArrayCollector32.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer42 = strArrayCollector32.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector44 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector32, strCollectorBinaryOperator43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNull(strCollectorStream29);
        org.junit.Assert.assertNull(strCollectorStream30);
        org.junit.Assert.assertNotNull(strListBiConsumer33);
        org.junit.Assert.assertNotNull(characteristicsSet34);
        org.junit.Assert.assertNotNull(strListFunction35);
        org.junit.Assert.assertNotNull(strListBinaryOperator36);
        org.junit.Assert.assertNotNull(strListFunction37);
        org.junit.Assert.assertNotNull(strListSupplier38);
        org.junit.Assert.assertNotNull(strListSupplier39);
        org.junit.Assert.assertNotNull(strListBinaryOperator40);
        org.junit.Assert.assertNotNull(strListBiConsumer41);
        org.junit.Assert.assertNotNull(strListBiConsumer42);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass11 = strListBinaryOperator10.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier3 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass9 = strListBinaryOperator8.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(strListSupplier3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream7 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet6);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream8 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet6);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream9 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsFailableStream7);
        org.junit.Assert.assertNotNull(characteristicsFailableStream8);
        org.junit.Assert.assertNotNull(characteristicsFailableStream9);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListFunction7);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream6 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet5);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream7 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet5);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream8 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsFailableStream6);
        org.junit.Assert.assertNotNull(characteristicsFailableStream7);
        org.junit.Assert.assertNotNull(characteristicsFailableStream8);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier13 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet16 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream17 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet16);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListSupplier13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
        org.junit.Assert.assertNotNull(characteristicsSet16);
        org.junit.Assert.assertNotNull(characteristicsFailableStream17);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass22 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector23 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass22);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction24 = strArrayCollector23.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction25 = strArrayCollector23.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer26 = strArrayCollector23.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator27 = strArrayCollector23.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet28 = strArrayCollector23.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator29 = strArrayCollector23.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier30 = strArrayCollector23.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction31 = strArrayCollector23.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector33 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector23, strCollectorBinaryOperator32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNotNull(strListFunction24);
        org.junit.Assert.assertNotNull(strListFunction25);
        org.junit.Assert.assertNotNull(strListBiConsumer26);
        org.junit.Assert.assertNotNull(strListBinaryOperator27);
        org.junit.Assert.assertNotNull(characteristicsSet28);
        org.junit.Assert.assertNotNull(strListBinaryOperator29);
        org.junit.Assert.assertNotNull(strListSupplier30);
        org.junit.Assert.assertNotNull(strListFunction31);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass26 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector27 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass26);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer28 = strArrayCollector27.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet29 = strArrayCollector27.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction30 = strArrayCollector27.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet31 = strArrayCollector27.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction32 = strArrayCollector27.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier33 = strArrayCollector27.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator34 = strArrayCollector27.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet35 = strArrayCollector27.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer36 = strArrayCollector27.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer37 = strArrayCollector27.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer38 = strArrayCollector27.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector40 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector27, strCollectorBinaryOperator39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNotNull(strListBiConsumer28);
        org.junit.Assert.assertNotNull(characteristicsSet29);
        org.junit.Assert.assertNotNull(strListFunction30);
        org.junit.Assert.assertNotNull(characteristicsSet31);
        org.junit.Assert.assertNotNull(strListFunction32);
        org.junit.Assert.assertNotNull(strListSupplier33);
        org.junit.Assert.assertNotNull(strListBinaryOperator34);
        org.junit.Assert.assertNotNull(characteristicsSet35);
        org.junit.Assert.assertNotNull(strListBiConsumer36);
        org.junit.Assert.assertNotNull(strListBiConsumer37);
        org.junit.Assert.assertNotNull(strListBiConsumer38);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator15 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator16 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier17 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListBinaryOperator15);
        org.junit.Assert.assertNotNull(strListBinaryOperator16);
        org.junit.Assert.assertNotNull(strListSupplier17);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.lang.Class<?> wildcardClass8 = strListFunction7.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListSupplier12);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass15 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass18 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector19 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass18);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet20 = strArrayCollector19.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction21 = strArrayCollector19.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction22 = strArrayCollector19.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction23 = strArrayCollector19.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer24 = strArrayCollector19.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier25 = strArrayCollector19.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator26 = strArrayCollector19.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector28 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector19, strCollectorBinaryOperator27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNotNull(characteristicsSet20);
        org.junit.Assert.assertNotNull(strListFunction21);
        org.junit.Assert.assertNotNull(strListFunction22);
        org.junit.Assert.assertNotNull(strListFunction23);
        org.junit.Assert.assertNotNull(strListBiConsumer24);
        org.junit.Assert.assertNotNull(strListSupplier25);
        org.junit.Assert.assertNotNull(strListBinaryOperator26);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListFunction10);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass9 = strListBinaryOperator8.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListSupplier9);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass11 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector12 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass11);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector12.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector12.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator15 = strArrayCollector12.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer16 = strArrayCollector12.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction17 = strArrayCollector12.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector19 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector12, strCollectorBinaryOperator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
        org.junit.Assert.assertNotNull(strListBinaryOperator15);
        org.junit.Assert.assertNotNull(strListBiConsumer16);
        org.junit.Assert.assertNotNull(strListFunction17);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream13 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet12);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(characteristicsFailableStream13);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.lang.Class<?> wildcardClass10 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator4 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(strListBinaryOperator4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListSupplier9);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.lang.Class<?> wildcardClass11 = characteristicsSet10.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass5 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector6 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass5);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector6.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector6.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector6.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector6.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector6.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector6.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector6.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer14 = strArrayCollector6.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector6.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator16 = strArrayCollector6.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector18 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector6, strCollectorBinaryOperator17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
        org.junit.Assert.assertNotNull(strListBiConsumer14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(strListBinaryOperator16);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.lang.Class<?> wildcardClass9 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator15 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass16 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListBinaryOperator15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass25 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector26 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass25);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer27 = strArrayCollector26.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet28 = strArrayCollector26.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier29 = strArrayCollector26.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction30 = strArrayCollector26.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator31 = strArrayCollector26.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator32 = strArrayCollector26.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier33 = strArrayCollector26.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier34 = strArrayCollector26.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector36 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector26, strCollectorBinaryOperator35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNotNull(strListBiConsumer27);
        org.junit.Assert.assertNotNull(characteristicsSet28);
        org.junit.Assert.assertNotNull(strListSupplier29);
        org.junit.Assert.assertNotNull(strListFunction30);
        org.junit.Assert.assertNotNull(strListBinaryOperator31);
        org.junit.Assert.assertNotNull(strListBinaryOperator32);
        org.junit.Assert.assertNotNull(strListSupplier33);
        org.junit.Assert.assertNotNull(strListSupplier34);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.lang.Class<?> wildcardClass12 = strListSupplier11.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListFunction10);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier13 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator15 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListSupplier13);
        org.junit.Assert.assertNotNull(strListFunction14);
        org.junit.Assert.assertNotNull(strListBinaryOperator15);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator4 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(strListBinaryOperator4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListFunction7);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass3 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector4 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass3);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector4.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector4.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector4.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector4.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector4.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector4.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector4.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector4.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector4.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector4.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector16 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector4, strCollectorBinaryOperator15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListSupplier14);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListFunction9);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListSupplier12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream6 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsFailableStream6);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream29 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream30 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream31 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream32 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream33 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass34 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector35 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass34);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet36 = strArrayCollector35.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer37 = strArrayCollector35.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer38 = strArrayCollector35.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet39 = strArrayCollector35.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer40 = strArrayCollector35.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer41 = strArrayCollector35.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector43 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector35, strCollectorBinaryOperator42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNull(strCollectorStream29);
        org.junit.Assert.assertNull(strCollectorStream30);
        org.junit.Assert.assertNull(strCollectorStream31);
        org.junit.Assert.assertNull(strCollectorStream32);
        org.junit.Assert.assertNull(strCollectorStream33);
        org.junit.Assert.assertNotNull(characteristicsSet36);
        org.junit.Assert.assertNotNull(strListBiConsumer37);
        org.junit.Assert.assertNotNull(strListBiConsumer38);
        org.junit.Assert.assertNotNull(characteristicsSet39);
        org.junit.Assert.assertNotNull(strListBiConsumer40);
        org.junit.Assert.assertNotNull(strListBiConsumer41);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass29 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector30 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass29);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet31 = strArrayCollector30.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction32 = strArrayCollector30.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction33 = strArrayCollector30.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction34 = strArrayCollector30.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction35 = strArrayCollector30.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet36 = strArrayCollector30.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet37 = strArrayCollector30.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction38 = strArrayCollector30.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator39 = strArrayCollector30.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector41 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector30, strCollectorBinaryOperator40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNotNull(characteristicsSet31);
        org.junit.Assert.assertNotNull(strListFunction32);
        org.junit.Assert.assertNotNull(strListFunction33);
        org.junit.Assert.assertNotNull(strListFunction34);
        org.junit.Assert.assertNotNull(strListFunction35);
        org.junit.Assert.assertNotNull(characteristicsSet36);
        org.junit.Assert.assertNotNull(characteristicsSet37);
        org.junit.Assert.assertNotNull(strListFunction38);
        org.junit.Assert.assertNotNull(strListBinaryOperator39);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass14 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector15 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass14);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer16 = strArrayCollector15.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet17 = strArrayCollector15.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier18 = strArrayCollector15.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction19 = strArrayCollector15.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction20 = strArrayCollector15.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet21 = strArrayCollector15.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet22 = strArrayCollector15.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction23 = strArrayCollector15.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector25 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector15, strCollectorBinaryOperator24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNotNull(strListBiConsumer16);
        org.junit.Assert.assertNotNull(characteristicsSet17);
        org.junit.Assert.assertNotNull(strListSupplier18);
        org.junit.Assert.assertNotNull(strListFunction19);
        org.junit.Assert.assertNotNull(strListFunction20);
        org.junit.Assert.assertNotNull(characteristicsSet21);
        org.junit.Assert.assertNotNull(characteristicsSet22);
        org.junit.Assert.assertNotNull(strListFunction23);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream8 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet7);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream9 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet7);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream10 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsFailableStream8);
        org.junit.Assert.assertNotNull(characteristicsFailableStream9);
        org.junit.Assert.assertNotNull(characteristicsFailableStream10);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream9 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet8);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream10 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsFailableStream9);
        org.junit.Assert.assertNotNull(characteristicsFailableStream10);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListFunction9);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream11 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet10);
        java.lang.Class<?> wildcardClass12 = characteristicsSet10.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsFailableStream11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListSupplier11);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator2 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBinaryOperator2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListSupplier12);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.lang.Class<?> wildcardClass11 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator4 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListBinaryOperator4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier3 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass6 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(strListSupplier3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet14 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator15 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(characteristicsSet14);
        org.junit.Assert.assertNotNull(strListBinaryOperator15);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass27 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector28 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass27);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer29 = strArrayCollector28.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet30 = strArrayCollector28.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction31 = strArrayCollector28.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction32 = strArrayCollector28.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator33 = strArrayCollector28.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet34 = strArrayCollector28.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator35 = strArrayCollector28.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier36 = strArrayCollector28.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier37 = strArrayCollector28.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector39 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector28, strCollectorBinaryOperator38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNotNull(strListBiConsumer29);
        org.junit.Assert.assertNotNull(characteristicsSet30);
        org.junit.Assert.assertNotNull(strListFunction31);
        org.junit.Assert.assertNotNull(strListFunction32);
        org.junit.Assert.assertNotNull(strListBinaryOperator33);
        org.junit.Assert.assertNotNull(characteristicsSet34);
        org.junit.Assert.assertNotNull(strListBinaryOperator35);
        org.junit.Assert.assertNotNull(strListSupplier36);
        org.junit.Assert.assertNotNull(strListSupplier37);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass11 = strListBinaryOperator10.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream29 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream30 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream31 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream32 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass33 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector34 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass33);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer35 = strArrayCollector34.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier36 = strArrayCollector34.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet37 = strArrayCollector34.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer38 = strArrayCollector34.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector40 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector34, strCollectorBinaryOperator39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNull(strCollectorStream29);
        org.junit.Assert.assertNull(strCollectorStream30);
        org.junit.Assert.assertNull(strCollectorStream31);
        org.junit.Assert.assertNull(strCollectorStream32);
        org.junit.Assert.assertNotNull(strListBiConsumer35);
        org.junit.Assert.assertNotNull(strListSupplier36);
        org.junit.Assert.assertNotNull(characteristicsSet37);
        org.junit.Assert.assertNotNull(strListBiConsumer38);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier13 = strArrayCollector1.supplier();
        java.lang.Class<?> wildcardClass14 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListSupplier12);
        org.junit.Assert.assertNotNull(strListSupplier13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.lang.Class<?> wildcardClass12 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass7 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector8 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass7);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector8.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector8.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector8.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector8.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector8.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector8.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector8.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet16 = strArrayCollector8.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet17 = strArrayCollector8.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction18 = strArrayCollector8.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction19 = strArrayCollector8.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector21 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector8, strCollectorBinaryOperator20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(characteristicsSet16);
        org.junit.Assert.assertNotNull(characteristicsSet17);
        org.junit.Assert.assertNotNull(strListFunction18);
        org.junit.Assert.assertNotNull(strListFunction19);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListFunction13);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.lang.Class<?> wildcardClass10 = strListFunction9.getClass();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass8 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector9 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass8);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector9.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector9.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector9.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector9.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector9.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector9.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator16 = strArrayCollector9.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator17 = strArrayCollector9.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector19 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector9, strCollectorBinaryOperator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
        org.junit.Assert.assertNotNull(strListBinaryOperator16);
        org.junit.Assert.assertNotNull(strListBinaryOperator17);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListFunction10);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListFunction12);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.lang.Class<java.lang.String> strClass2 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector3 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass2);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector3.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector3.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector3.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector3.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector3.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector3.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector3.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector12 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector3, strCollectorBinaryOperator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListFunction10);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator2 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBinaryOperator2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListSupplier11);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListFunction12);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier13 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(strListSupplier13);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass9 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector10 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass9);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector10.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector10.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector10.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector10.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector10.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier16 = strArrayCollector10.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier17 = strArrayCollector10.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer18 = strArrayCollector10.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector20 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector10, strCollectorBinaryOperator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(strListSupplier16);
        org.junit.Assert.assertNotNull(strListSupplier17);
        org.junit.Assert.assertNotNull(strListBiConsumer18);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier13 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet14 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(strListSupplier13);
        org.junit.Assert.assertNotNull(characteristicsSet14);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier15 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListSupplier12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListSupplier15);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass9 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.lang.Class<?> wildcardClass7 = strListBiConsumer6.getClass();
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.Object> objArrayCollector8 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.Object>((java.lang.Class<java.lang.Object>) wildcardClass7);
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass4 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector5 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass4);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector5.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector5.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector5.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector5.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector5.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector12 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector5, strCollectorBinaryOperator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass24 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector25 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass24);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet26 = strArrayCollector25.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer27 = strArrayCollector25.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator28 = strArrayCollector25.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction29 = strArrayCollector25.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction30 = strArrayCollector25.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer31 = strArrayCollector25.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction32 = strArrayCollector25.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector34 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector25, strCollectorBinaryOperator33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNotNull(characteristicsSet26);
        org.junit.Assert.assertNotNull(strListBiConsumer27);
        org.junit.Assert.assertNotNull(strListBinaryOperator28);
        org.junit.Assert.assertNotNull(strListFunction29);
        org.junit.Assert.assertNotNull(strListFunction30);
        org.junit.Assert.assertNotNull(strListBiConsumer31);
        org.junit.Assert.assertNotNull(strListFunction32);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListFunction8);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.lang.Class<?> wildcardClass5 = strListBiConsumer4.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier16 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction17 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(strListSupplier16);
        org.junit.Assert.assertNotNull(strListFunction17);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass29 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector30 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass29);
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator31 = strArrayCollector30.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector33 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector30, strCollectorBinaryOperator32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNotNull(strListBinaryOperator31);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass24 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector25 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass24);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer26 = strArrayCollector25.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet27 = strArrayCollector25.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction28 = strArrayCollector25.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator29 = strArrayCollector25.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction30 = strArrayCollector25.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier31 = strArrayCollector25.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet32 = strArrayCollector25.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet33 = strArrayCollector25.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier34 = strArrayCollector25.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier35 = strArrayCollector25.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet36 = strArrayCollector25.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector38 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector25, strCollectorBinaryOperator37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNotNull(strListBiConsumer26);
        org.junit.Assert.assertNotNull(characteristicsSet27);
        org.junit.Assert.assertNotNull(strListFunction28);
        org.junit.Assert.assertNotNull(strListBinaryOperator29);
        org.junit.Assert.assertNotNull(strListFunction30);
        org.junit.Assert.assertNotNull(strListSupplier31);
        org.junit.Assert.assertNotNull(characteristicsSet32);
        org.junit.Assert.assertNotNull(characteristicsSet33);
        org.junit.Assert.assertNotNull(strListSupplier34);
        org.junit.Assert.assertNotNull(strListSupplier35);
        org.junit.Assert.assertNotNull(characteristicsSet36);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass15 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector16 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass15);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer17 = strArrayCollector16.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet18 = strArrayCollector16.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction19 = strArrayCollector16.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator20 = strArrayCollector16.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction21 = strArrayCollector16.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier22 = strArrayCollector16.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet23 = strArrayCollector16.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet24 = strArrayCollector16.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator25 = strArrayCollector16.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet26 = strArrayCollector16.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction27 = strArrayCollector16.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer28 = strArrayCollector16.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction29 = strArrayCollector16.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer30 = strArrayCollector16.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer31 = strArrayCollector16.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer32 = strArrayCollector16.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier33 = strArrayCollector16.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector35 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector16, strCollectorBinaryOperator34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNotNull(strListBiConsumer17);
        org.junit.Assert.assertNotNull(characteristicsSet18);
        org.junit.Assert.assertNotNull(strListFunction19);
        org.junit.Assert.assertNotNull(strListBinaryOperator20);
        org.junit.Assert.assertNotNull(strListFunction21);
        org.junit.Assert.assertNotNull(strListSupplier22);
        org.junit.Assert.assertNotNull(characteristicsSet23);
        org.junit.Assert.assertNotNull(characteristicsSet24);
        org.junit.Assert.assertNotNull(strListBinaryOperator25);
        org.junit.Assert.assertNotNull(characteristicsSet26);
        org.junit.Assert.assertNotNull(strListFunction27);
        org.junit.Assert.assertNotNull(strListBiConsumer28);
        org.junit.Assert.assertNotNull(strListFunction29);
        org.junit.Assert.assertNotNull(strListBiConsumer30);
        org.junit.Assert.assertNotNull(strListBiConsumer31);
        org.junit.Assert.assertNotNull(strListBiConsumer32);
        org.junit.Assert.assertNotNull(strListSupplier33);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass11 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector12 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass11);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector12.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector12.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector12.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet16 = strArrayCollector12.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer17 = strArrayCollector12.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier18 = strArrayCollector12.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction19 = strArrayCollector12.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier20 = strArrayCollector12.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer21 = strArrayCollector12.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer22 = strArrayCollector12.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector24 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector12, strCollectorBinaryOperator23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListFunction14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
        org.junit.Assert.assertNotNull(characteristicsSet16);
        org.junit.Assert.assertNotNull(strListBiConsumer17);
        org.junit.Assert.assertNotNull(strListSupplier18);
        org.junit.Assert.assertNotNull(strListFunction19);
        org.junit.Assert.assertNotNull(strListSupplier20);
        org.junit.Assert.assertNotNull(strListBiConsumer21);
        org.junit.Assert.assertNotNull(strListBiConsumer22);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.lang.Class<?> wildcardClass11 = strListFunction10.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream10 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet9);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream11 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsFailableStream10);
        org.junit.Assert.assertNotNull(characteristicsFailableStream11);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListFunction11);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream11 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet10);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsFailableStream11);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier15 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer16 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListFunction14);
        org.junit.Assert.assertNotNull(strListSupplier15);
        org.junit.Assert.assertNotNull(strListBiConsumer16);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass22 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector23 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass22);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer24 = strArrayCollector23.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier25 = strArrayCollector23.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet26 = strArrayCollector23.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator27 = strArrayCollector23.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier28 = strArrayCollector23.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator29 = strArrayCollector23.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier30 = strArrayCollector23.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector32 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector23, strCollectorBinaryOperator31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNotNull(strListBiConsumer24);
        org.junit.Assert.assertNotNull(strListSupplier25);
        org.junit.Assert.assertNotNull(characteristicsSet26);
        org.junit.Assert.assertNotNull(strListBinaryOperator27);
        org.junit.Assert.assertNotNull(strListSupplier28);
        org.junit.Assert.assertNotNull(strListBinaryOperator29);
        org.junit.Assert.assertNotNull(strListSupplier30);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator4 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.lang.Class<?> wildcardClass9 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(strListBinaryOperator4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass20 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector21 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass20);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet22 = strArrayCollector21.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction23 = strArrayCollector21.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier24 = strArrayCollector21.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer25 = strArrayCollector21.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector27 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector21, strCollectorBinaryOperator26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNotNull(characteristicsSet22);
        org.junit.Assert.assertNotNull(strListFunction23);
        org.junit.Assert.assertNotNull(strListSupplier24);
        org.junit.Assert.assertNotNull(strListBiConsumer25);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListSupplier7);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier13 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier16 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListSupplier13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
        org.junit.Assert.assertNotNull(strListSupplier16);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.lang.Class<?> wildcardClass9 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer14 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListBiConsumer14);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator15 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(strListSupplier12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
        org.junit.Assert.assertNotNull(strListBinaryOperator15);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.lang.CharSequence> charSequenceFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.lang.CharSequence>(charSequenceStream0);
        java.lang.Class<?> wildcardClass2 = charSequenceFailableStream1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier13 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet14 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier15 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListSupplier13);
        org.junit.Assert.assertNotNull(characteristicsSet14);
        org.junit.Assert.assertNotNull(strListSupplier15);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass29 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector30 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass29);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer31 = strArrayCollector30.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet32 = strArrayCollector30.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet33 = strArrayCollector30.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet34 = strArrayCollector30.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet35 = strArrayCollector30.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction36 = strArrayCollector30.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer37 = strArrayCollector30.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet38 = strArrayCollector30.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer39 = strArrayCollector30.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector41 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector30, strCollectorBinaryOperator40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNotNull(strListBiConsumer31);
        org.junit.Assert.assertNotNull(characteristicsSet32);
        org.junit.Assert.assertNotNull(characteristicsSet33);
        org.junit.Assert.assertNotNull(characteristicsSet34);
        org.junit.Assert.assertNotNull(characteristicsSet35);
        org.junit.Assert.assertNotNull(strListFunction36);
        org.junit.Assert.assertNotNull(strListBiConsumer37);
        org.junit.Assert.assertNotNull(characteristicsSet38);
        org.junit.Assert.assertNotNull(strListBiConsumer39);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass15 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector16 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass15);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction17 = strArrayCollector16.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator18 = strArrayCollector16.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet19 = strArrayCollector16.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier20 = strArrayCollector16.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer21 = strArrayCollector16.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction22 = strArrayCollector16.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction23 = strArrayCollector16.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier24 = strArrayCollector16.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator25 = strArrayCollector16.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector27 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector16, strCollectorBinaryOperator26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNotNull(strListFunction17);
        org.junit.Assert.assertNotNull(strListBinaryOperator18);
        org.junit.Assert.assertNotNull(characteristicsSet19);
        org.junit.Assert.assertNotNull(strListSupplier20);
        org.junit.Assert.assertNotNull(strListBiConsumer21);
        org.junit.Assert.assertNotNull(strListFunction22);
        org.junit.Assert.assertNotNull(strListFunction23);
        org.junit.Assert.assertNotNull(strListSupplier24);
        org.junit.Assert.assertNotNull(strListBinaryOperator25);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier13 = strArrayCollector1.supplier();
        java.lang.Class<?> wildcardClass14 = strListSupplier13.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListSupplier13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator4 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(strListBinaryOperator4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListFunction8);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass26 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector27 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass26);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer28 = strArrayCollector27.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet29 = strArrayCollector27.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet30 = strArrayCollector27.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet31 = strArrayCollector27.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet32 = strArrayCollector27.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier33 = strArrayCollector27.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator34 = strArrayCollector27.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction35 = strArrayCollector27.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator36 = strArrayCollector27.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector38 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector27, strCollectorBinaryOperator37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNotNull(strListBiConsumer28);
        org.junit.Assert.assertNotNull(characteristicsSet29);
        org.junit.Assert.assertNotNull(characteristicsSet30);
        org.junit.Assert.assertNotNull(characteristicsSet31);
        org.junit.Assert.assertNotNull(characteristicsSet32);
        org.junit.Assert.assertNotNull(strListSupplier33);
        org.junit.Assert.assertNotNull(strListBinaryOperator34);
        org.junit.Assert.assertNotNull(strListFunction35);
        org.junit.Assert.assertNotNull(strListBinaryOperator36);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream9 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet8);
        java.lang.Class<?> wildcardClass10 = characteristicsFailableStream9.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsFailableStream9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.lang.Class<?> wildcardClass6 = characteristicsSet5.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListSupplier9);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream7 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet6);
        java.lang.Class<?> wildcardClass8 = characteristicsSet6.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsFailableStream7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass25 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector26 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass25);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet27 = strArrayCollector26.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer28 = strArrayCollector26.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet29 = strArrayCollector26.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator30 = strArrayCollector26.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction31 = strArrayCollector26.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator32 = strArrayCollector26.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet33 = strArrayCollector26.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet34 = strArrayCollector26.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector36 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector26, strCollectorBinaryOperator35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNotNull(characteristicsSet27);
        org.junit.Assert.assertNotNull(strListBiConsumer28);
        org.junit.Assert.assertNotNull(characteristicsSet29);
        org.junit.Assert.assertNotNull(strListBinaryOperator30);
        org.junit.Assert.assertNotNull(strListFunction31);
        org.junit.Assert.assertNotNull(strListBinaryOperator32);
        org.junit.Assert.assertNotNull(characteristicsSet33);
        org.junit.Assert.assertNotNull(characteristicsSet34);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass22 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector23 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass22);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer24 = strArrayCollector23.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet25 = strArrayCollector23.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction26 = strArrayCollector23.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet27 = strArrayCollector23.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction28 = strArrayCollector23.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier29 = strArrayCollector23.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator30 = strArrayCollector23.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction31 = strArrayCollector23.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier32 = strArrayCollector23.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector34 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector23, strCollectorBinaryOperator33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNotNull(strListBiConsumer24);
        org.junit.Assert.assertNotNull(characteristicsSet25);
        org.junit.Assert.assertNotNull(strListFunction26);
        org.junit.Assert.assertNotNull(characteristicsSet27);
        org.junit.Assert.assertNotNull(strListFunction28);
        org.junit.Assert.assertNotNull(strListSupplier29);
        org.junit.Assert.assertNotNull(strListBinaryOperator30);
        org.junit.Assert.assertNotNull(strListFunction31);
        org.junit.Assert.assertNotNull(strListSupplier32);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListFunction8);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass21 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector22 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass21);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer23 = strArrayCollector22.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet24 = strArrayCollector22.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction25 = strArrayCollector22.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator26 = strArrayCollector22.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction27 = strArrayCollector22.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier28 = strArrayCollector22.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet29 = strArrayCollector22.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet30 = strArrayCollector22.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer31 = strArrayCollector22.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction32 = strArrayCollector22.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer33 = strArrayCollector22.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier34 = strArrayCollector22.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction35 = strArrayCollector22.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer36 = strArrayCollector22.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector38 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector22, strCollectorBinaryOperator37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNotNull(strListBiConsumer23);
        org.junit.Assert.assertNotNull(characteristicsSet24);
        org.junit.Assert.assertNotNull(strListFunction25);
        org.junit.Assert.assertNotNull(strListBinaryOperator26);
        org.junit.Assert.assertNotNull(strListFunction27);
        org.junit.Assert.assertNotNull(strListSupplier28);
        org.junit.Assert.assertNotNull(characteristicsSet29);
        org.junit.Assert.assertNotNull(characteristicsSet30);
        org.junit.Assert.assertNotNull(strListBiConsumer31);
        org.junit.Assert.assertNotNull(strListFunction32);
        org.junit.Assert.assertNotNull(strListBiConsumer33);
        org.junit.Assert.assertNotNull(strListSupplier34);
        org.junit.Assert.assertNotNull(strListFunction35);
        org.junit.Assert.assertNotNull(strListBiConsumer36);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream14 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet13);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(characteristicsFailableStream14);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass17 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector18 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass17);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer19 = strArrayCollector18.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet20 = strArrayCollector18.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction21 = strArrayCollector18.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator22 = strArrayCollector18.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator23 = strArrayCollector18.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer24 = strArrayCollector18.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator25 = strArrayCollector18.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator26 = strArrayCollector18.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator27 = strArrayCollector18.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector29 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector18, strCollectorBinaryOperator28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNotNull(strListBiConsumer19);
        org.junit.Assert.assertNotNull(characteristicsSet20);
        org.junit.Assert.assertNotNull(strListFunction21);
        org.junit.Assert.assertNotNull(strListBinaryOperator22);
        org.junit.Assert.assertNotNull(strListBinaryOperator23);
        org.junit.Assert.assertNotNull(strListBiConsumer24);
        org.junit.Assert.assertNotNull(strListBinaryOperator25);
        org.junit.Assert.assertNotNull(strListBinaryOperator26);
        org.junit.Assert.assertNotNull(strListBinaryOperator27);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass9 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass29 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector30 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass29);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer31 = strArrayCollector30.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet32 = strArrayCollector30.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction33 = strArrayCollector30.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator34 = strArrayCollector30.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction35 = strArrayCollector30.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier36 = strArrayCollector30.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet37 = strArrayCollector30.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet38 = strArrayCollector30.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer39 = strArrayCollector30.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction40 = strArrayCollector30.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator41 = strArrayCollector30.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer42 = strArrayCollector30.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction43 = strArrayCollector30.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer44 = strArrayCollector30.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector46 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector30, strCollectorBinaryOperator45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNotNull(strListBiConsumer31);
        org.junit.Assert.assertNotNull(characteristicsSet32);
        org.junit.Assert.assertNotNull(strListFunction33);
        org.junit.Assert.assertNotNull(strListBinaryOperator34);
        org.junit.Assert.assertNotNull(strListFunction35);
        org.junit.Assert.assertNotNull(strListSupplier36);
        org.junit.Assert.assertNotNull(characteristicsSet37);
        org.junit.Assert.assertNotNull(characteristicsSet38);
        org.junit.Assert.assertNotNull(strListBiConsumer39);
        org.junit.Assert.assertNotNull(strListFunction40);
        org.junit.Assert.assertNotNull(strListBinaryOperator41);
        org.junit.Assert.assertNotNull(strListBiConsumer42);
        org.junit.Assert.assertNotNull(strListFunction43);
        org.junit.Assert.assertNotNull(strListBiConsumer44);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass27 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector28 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass27);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer29 = strArrayCollector28.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet30 = strArrayCollector28.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet31 = strArrayCollector28.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier32 = strArrayCollector28.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector34 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector28, strCollectorBinaryOperator33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNotNull(strListBiConsumer29);
        org.junit.Assert.assertNotNull(characteristicsSet30);
        org.junit.Assert.assertNotNull(characteristicsSet31);
        org.junit.Assert.assertNotNull(strListSupplier32);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier15 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet16 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListSupplier15);
        org.junit.Assert.assertNotNull(characteristicsSet16);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.lang.Class<?> wildcardClass11 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.lang.Class<?> wildcardClass13 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass20 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector21 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass20);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet22 = strArrayCollector21.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer23 = strArrayCollector21.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator24 = strArrayCollector21.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction25 = strArrayCollector21.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction26 = strArrayCollector21.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction27 = strArrayCollector21.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier28 = strArrayCollector21.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier29 = strArrayCollector21.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet30 = strArrayCollector21.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer31 = strArrayCollector21.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector33 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector21, strCollectorBinaryOperator32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNotNull(characteristicsSet22);
        org.junit.Assert.assertNotNull(strListBiConsumer23);
        org.junit.Assert.assertNotNull(strListBinaryOperator24);
        org.junit.Assert.assertNotNull(strListFunction25);
        org.junit.Assert.assertNotNull(strListFunction26);
        org.junit.Assert.assertNotNull(strListFunction27);
        org.junit.Assert.assertNotNull(strListSupplier28);
        org.junit.Assert.assertNotNull(strListSupplier29);
        org.junit.Assert.assertNotNull(characteristicsSet30);
        org.junit.Assert.assertNotNull(strListBiConsumer31);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass29 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector30 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass29);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer31 = strArrayCollector30.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet32 = strArrayCollector30.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction33 = strArrayCollector30.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet34 = strArrayCollector30.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction35 = strArrayCollector30.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer36 = strArrayCollector30.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator37 = strArrayCollector30.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector39 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector30, strCollectorBinaryOperator38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNotNull(strListBiConsumer31);
        org.junit.Assert.assertNotNull(characteristicsSet32);
        org.junit.Assert.assertNotNull(strListFunction33);
        org.junit.Assert.assertNotNull(characteristicsSet34);
        org.junit.Assert.assertNotNull(strListFunction35);
        org.junit.Assert.assertNotNull(strListBiConsumer36);
        org.junit.Assert.assertNotNull(strListBinaryOperator37);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.lang.Class<?> wildcardClass11 = strListSupplier10.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier13 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator15 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(strListSupplier13);
        org.junit.Assert.assertNotNull(strListFunction14);
        org.junit.Assert.assertNotNull(strListBinaryOperator15);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer14 = strArrayCollector1.accumulator();
        java.lang.Class<?> wildcardClass15 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(strListBiConsumer14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator2 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBinaryOperator2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListFunction9);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListSupplier9);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListSupplier14);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass18 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector19 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass18);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet20 = strArrayCollector19.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction21 = strArrayCollector19.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction22 = strArrayCollector19.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction23 = strArrayCollector19.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier24 = strArrayCollector19.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator25 = strArrayCollector19.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer26 = strArrayCollector19.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction27 = strArrayCollector19.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction28 = strArrayCollector19.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector30 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector19, strCollectorBinaryOperator29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNotNull(characteristicsSet20);
        org.junit.Assert.assertNotNull(strListFunction21);
        org.junit.Assert.assertNotNull(strListFunction22);
        org.junit.Assert.assertNotNull(strListFunction23);
        org.junit.Assert.assertNotNull(strListSupplier24);
        org.junit.Assert.assertNotNull(strListBinaryOperator25);
        org.junit.Assert.assertNotNull(strListBiConsumer26);
        org.junit.Assert.assertNotNull(strListFunction27);
        org.junit.Assert.assertNotNull(strListFunction28);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.lang.Class<?> wildcardClass11 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator2 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.lang.Class<?> wildcardClass7 = characteristicsSet6.getClass();
        org.junit.Assert.assertNotNull(strListBinaryOperator2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer14 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier15 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
        org.junit.Assert.assertNotNull(strListBiConsumer14);
        org.junit.Assert.assertNotNull(strListSupplier15);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass14 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector15 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass14);
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator16 = strArrayCollector15.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator17 = strArrayCollector15.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer18 = strArrayCollector15.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction19 = strArrayCollector15.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier20 = strArrayCollector15.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector22 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector15, strCollectorBinaryOperator21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNotNull(strListBinaryOperator16);
        org.junit.Assert.assertNotNull(strListBinaryOperator17);
        org.junit.Assert.assertNotNull(strListBiConsumer18);
        org.junit.Assert.assertNotNull(strListFunction19);
        org.junit.Assert.assertNotNull(strListSupplier20);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer14 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator15 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier16 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier17 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListBiConsumer14);
        org.junit.Assert.assertNotNull(strListBinaryOperator15);
        org.junit.Assert.assertNotNull(strListSupplier16);
        org.junit.Assert.assertNotNull(strListSupplier17);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.lang.Class<?> wildcardClass13 = characteristicsSet12.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream8 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet7);
        java.lang.Class<?> wildcardClass9 = characteristicsSet7.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsFailableStream8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
        org.junit.Assert.assertNotNull(strListFunction14);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListFunction11);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass29 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector30 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass29);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer31 = strArrayCollector30.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet32 = strArrayCollector30.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction33 = strArrayCollector30.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction34 = strArrayCollector30.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier35 = strArrayCollector30.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer36 = strArrayCollector30.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector38 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector30, strCollectorBinaryOperator37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNotNull(strListBiConsumer31);
        org.junit.Assert.assertNotNull(characteristicsSet32);
        org.junit.Assert.assertNotNull(strListFunction33);
        org.junit.Assert.assertNotNull(strListFunction34);
        org.junit.Assert.assertNotNull(strListSupplier35);
        org.junit.Assert.assertNotNull(strListBiConsumer36);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator4 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream10 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(strListBinaryOperator4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsFailableStream10);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator4 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(strListBinaryOperator4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass24 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector25 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass24);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet26 = strArrayCollector25.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction27 = strArrayCollector25.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction28 = strArrayCollector25.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction29 = strArrayCollector25.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier30 = strArrayCollector25.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator31 = strArrayCollector25.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier32 = strArrayCollector25.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet33 = strArrayCollector25.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction34 = strArrayCollector25.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier35 = strArrayCollector25.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet36 = strArrayCollector25.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector38 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector25, strCollectorBinaryOperator37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNotNull(characteristicsSet26);
        org.junit.Assert.assertNotNull(strListFunction27);
        org.junit.Assert.assertNotNull(strListFunction28);
        org.junit.Assert.assertNotNull(strListFunction29);
        org.junit.Assert.assertNotNull(strListSupplier30);
        org.junit.Assert.assertNotNull(strListBinaryOperator31);
        org.junit.Assert.assertNotNull(strListSupplier32);
        org.junit.Assert.assertNotNull(characteristicsSet33);
        org.junit.Assert.assertNotNull(strListFunction34);
        org.junit.Assert.assertNotNull(strListSupplier35);
        org.junit.Assert.assertNotNull(characteristicsSet36);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator4 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream10 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(strListBinaryOperator4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsFailableStream10);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream3 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet2);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream4 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet2);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream5 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet2);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream6 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet2);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream7 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet2);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream8 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet2);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream9 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet2);
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(characteristicsFailableStream3);
        org.junit.Assert.assertNotNull(characteristicsFailableStream4);
        org.junit.Assert.assertNotNull(characteristicsFailableStream5);
        org.junit.Assert.assertNotNull(characteristicsFailableStream6);
        org.junit.Assert.assertNotNull(characteristicsFailableStream7);
        org.junit.Assert.assertNotNull(characteristicsFailableStream8);
        org.junit.Assert.assertNotNull(characteristicsFailableStream9);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream8 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsFailableStream8);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer14 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListBiConsumer14);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass22 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector23 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass22);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet24 = strArrayCollector23.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer25 = strArrayCollector23.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet26 = strArrayCollector23.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator27 = strArrayCollector23.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer28 = strArrayCollector23.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer29 = strArrayCollector23.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet30 = strArrayCollector23.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator31 = strArrayCollector23.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer32 = strArrayCollector23.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector34 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector23, strCollectorBinaryOperator33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNotNull(characteristicsSet24);
        org.junit.Assert.assertNotNull(strListBiConsumer25);
        org.junit.Assert.assertNotNull(characteristicsSet26);
        org.junit.Assert.assertNotNull(strListBinaryOperator27);
        org.junit.Assert.assertNotNull(strListBiConsumer28);
        org.junit.Assert.assertNotNull(strListBiConsumer29);
        org.junit.Assert.assertNotNull(characteristicsSet30);
        org.junit.Assert.assertNotNull(strListBinaryOperator31);
        org.junit.Assert.assertNotNull(strListBiConsumer32);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator15 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
        org.junit.Assert.assertNotNull(strListFunction14);
        org.junit.Assert.assertNotNull(strListBinaryOperator15);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.lang.Class<java.lang.String> strClass2 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector3 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass2);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector3.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector3.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector3.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector3.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector3.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector3.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector3.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector12 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector3, strCollectorBinaryOperator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator15 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListBinaryOperator15);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.lang.Class<?> wildcardClass5 = characteristicsSet4.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet14 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream15 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet14);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(characteristicsSet14);
        org.junit.Assert.assertNotNull(characteristicsFailableStream15);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListSupplier14);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListSupplier12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream11 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet10);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsFailableStream11);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass3 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector4 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass3);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector4.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector4.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector4.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector4.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector4.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector4.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector4.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector4.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector14 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector4, strCollectorBinaryOperator13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListSupplier12);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.lang.Class<?> wildcardClass11 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass10 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector11 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass10);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector11.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector11.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector11.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction15 = strArrayCollector11.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet16 = strArrayCollector11.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier17 = strArrayCollector11.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet18 = strArrayCollector11.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer19 = strArrayCollector11.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector21 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector11, strCollectorBinaryOperator20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListFunction15);
        org.junit.Assert.assertNotNull(characteristicsSet16);
        org.junit.Assert.assertNotNull(strListSupplier17);
        org.junit.Assert.assertNotNull(characteristicsSet18);
        org.junit.Assert.assertNotNull(strListBiConsumer19);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListSupplier12);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator16 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListFunction14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(strListBinaryOperator16);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass9 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector10 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass9);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector10.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector10.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector10.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet14 = strArrayCollector10.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector10.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet16 = strArrayCollector10.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector18 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector10, strCollectorBinaryOperator17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(characteristicsSet14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(characteristicsSet16);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator15 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer16 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListBinaryOperator15);
        org.junit.Assert.assertNotNull(strListBiConsumer16);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass4 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector5 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass4);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector5.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector5.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector5.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector5.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector11 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector5, strCollectorBinaryOperator10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass13 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector14 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass13);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction15 = strArrayCollector14.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction16 = strArrayCollector14.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer17 = strArrayCollector14.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer18 = strArrayCollector14.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier19 = strArrayCollector14.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction20 = strArrayCollector14.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction21 = strArrayCollector14.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer22 = strArrayCollector14.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer23 = strArrayCollector14.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector25 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector14, strCollectorBinaryOperator24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNotNull(strListFunction15);
        org.junit.Assert.assertNotNull(strListFunction16);
        org.junit.Assert.assertNotNull(strListBiConsumer17);
        org.junit.Assert.assertNotNull(strListBiConsumer18);
        org.junit.Assert.assertNotNull(strListSupplier19);
        org.junit.Assert.assertNotNull(strListFunction20);
        org.junit.Assert.assertNotNull(strListFunction21);
        org.junit.Assert.assertNotNull(strListBiConsumer22);
        org.junit.Assert.assertNotNull(strListBiConsumer23);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator4 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(strListBinaryOperator4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass17 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector18 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass17);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer19 = strArrayCollector18.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet20 = strArrayCollector18.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction21 = strArrayCollector18.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator22 = strArrayCollector18.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction23 = strArrayCollector18.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier24 = strArrayCollector18.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet25 = strArrayCollector18.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet26 = strArrayCollector18.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier27 = strArrayCollector18.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer28 = strArrayCollector18.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet29 = strArrayCollector18.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer30 = strArrayCollector18.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector32 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector18, strCollectorBinaryOperator31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNotNull(strListBiConsumer19);
        org.junit.Assert.assertNotNull(characteristicsSet20);
        org.junit.Assert.assertNotNull(strListFunction21);
        org.junit.Assert.assertNotNull(strListBinaryOperator22);
        org.junit.Assert.assertNotNull(strListFunction23);
        org.junit.Assert.assertNotNull(strListSupplier24);
        org.junit.Assert.assertNotNull(characteristicsSet25);
        org.junit.Assert.assertNotNull(characteristicsSet26);
        org.junit.Assert.assertNotNull(strListSupplier27);
        org.junit.Assert.assertNotNull(strListBiConsumer28);
        org.junit.Assert.assertNotNull(characteristicsSet29);
        org.junit.Assert.assertNotNull(strListBiConsumer30);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator16 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
        org.junit.Assert.assertNotNull(strListBinaryOperator16);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass28 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector29 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass28);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet30 = strArrayCollector29.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer31 = strArrayCollector29.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet32 = strArrayCollector29.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator33 = strArrayCollector29.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer34 = strArrayCollector29.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier35 = strArrayCollector29.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator36 = strArrayCollector29.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction37 = strArrayCollector29.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector39 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector29, strCollectorBinaryOperator38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNotNull(characteristicsSet30);
        org.junit.Assert.assertNotNull(strListBiConsumer31);
        org.junit.Assert.assertNotNull(characteristicsSet32);
        org.junit.Assert.assertNotNull(strListBinaryOperator33);
        org.junit.Assert.assertNotNull(strListBiConsumer34);
        org.junit.Assert.assertNotNull(strListSupplier35);
        org.junit.Assert.assertNotNull(strListBinaryOperator36);
        org.junit.Assert.assertNotNull(strListFunction37);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass12 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass16 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector17 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass16);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer18 = strArrayCollector17.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet19 = strArrayCollector17.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier20 = strArrayCollector17.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction21 = strArrayCollector17.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier22 = strArrayCollector17.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator23 = strArrayCollector17.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier24 = strArrayCollector17.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction25 = strArrayCollector17.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer26 = strArrayCollector17.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction27 = strArrayCollector17.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer28 = strArrayCollector17.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector30 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector17, strCollectorBinaryOperator29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNotNull(strListBiConsumer18);
        org.junit.Assert.assertNotNull(characteristicsSet19);
        org.junit.Assert.assertNotNull(strListSupplier20);
        org.junit.Assert.assertNotNull(strListFunction21);
        org.junit.Assert.assertNotNull(strListSupplier22);
        org.junit.Assert.assertNotNull(strListBinaryOperator23);
        org.junit.Assert.assertNotNull(strListSupplier24);
        org.junit.Assert.assertNotNull(strListFunction25);
        org.junit.Assert.assertNotNull(strListBiConsumer26);
        org.junit.Assert.assertNotNull(strListFunction27);
        org.junit.Assert.assertNotNull(strListBiConsumer28);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass22 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector23 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass22);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction24 = strArrayCollector23.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction25 = strArrayCollector23.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet26 = strArrayCollector23.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet27 = strArrayCollector23.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet28 = strArrayCollector23.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector30 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector23, strCollectorBinaryOperator29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNotNull(strListFunction24);
        org.junit.Assert.assertNotNull(strListFunction25);
        org.junit.Assert.assertNotNull(characteristicsSet26);
        org.junit.Assert.assertNotNull(characteristicsSet27);
        org.junit.Assert.assertNotNull(characteristicsSet28);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.lang.Class<?> wildcardClass9 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListSupplier7);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction15 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator16 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListFunction15);
        org.junit.Assert.assertNotNull(strListBinaryOperator16);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListSupplier11);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer14 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(strListBiConsumer14);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListSupplier12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer16 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator17 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet18 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListFunction14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(strListBiConsumer16);
        org.junit.Assert.assertNotNull(strListBinaryOperator17);
        org.junit.Assert.assertNotNull(characteristicsSet18);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListFunction11);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream10 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet9);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream11 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet9);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream12 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet9);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream13 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsFailableStream10);
        org.junit.Assert.assertNotNull(characteristicsFailableStream11);
        org.junit.Assert.assertNotNull(characteristicsFailableStream12);
        org.junit.Assert.assertNotNull(characteristicsFailableStream13);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass7 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector8 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass7);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector8.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector8.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector8.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector8.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector8.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer14 = strArrayCollector8.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction15 = strArrayCollector8.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector17 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector8, strCollectorBinaryOperator16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListBiConsumer14);
        org.junit.Assert.assertNotNull(strListFunction15);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass11 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector12 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass11);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector12.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet14 = strArrayCollector12.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction15 = strArrayCollector12.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet16 = strArrayCollector12.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction17 = strArrayCollector12.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator18 = strArrayCollector12.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier19 = strArrayCollector12.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction20 = strArrayCollector12.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier21 = strArrayCollector12.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector23 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector12, strCollectorBinaryOperator22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(characteristicsSet14);
        org.junit.Assert.assertNotNull(strListFunction15);
        org.junit.Assert.assertNotNull(characteristicsSet16);
        org.junit.Assert.assertNotNull(strListFunction17);
        org.junit.Assert.assertNotNull(strListBinaryOperator18);
        org.junit.Assert.assertNotNull(strListSupplier19);
        org.junit.Assert.assertNotNull(strListFunction20);
        org.junit.Assert.assertNotNull(strListSupplier21);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.lang.Class<?> wildcardClass12 = characteristicsSet11.getClass();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream12 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet11);
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(characteristicsFailableStream12);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass10 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.lang.Class<?> wildcardClass11 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier3 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator4 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream6 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListSupplier3);
        org.junit.Assert.assertNotNull(strListBinaryOperator4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsFailableStream6);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(strListFunction13);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        java.lang.Class<?> wildcardClass14 = strListBiConsumer13.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass10 = strListBinaryOperator9.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListSupplier10);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.lang.Class<?> wildcardClass11 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass8 = strArrayCollector1.getClass();
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.Object> objArrayCollector9 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.Object>((java.lang.Class<java.lang.Object>) wildcardClass8);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier3 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(strListSupplier3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListSupplier10);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass14 = strListBinaryOperator13.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListFunction14);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator16 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator17 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListFunction14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
        org.junit.Assert.assertNotNull(strListBinaryOperator16);
        org.junit.Assert.assertNotNull(strListBinaryOperator17);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListFunction13);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction16 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(strListFunction14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
        org.junit.Assert.assertNotNull(strListFunction16);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass16 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector17 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass16);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer18 = strArrayCollector17.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet19 = strArrayCollector17.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction20 = strArrayCollector17.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator21 = strArrayCollector17.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction22 = strArrayCollector17.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier23 = strArrayCollector17.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier24 = strArrayCollector17.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction25 = strArrayCollector17.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator26 = strArrayCollector17.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator27 = strArrayCollector17.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector29 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector17, strCollectorBinaryOperator28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNotNull(strListBiConsumer18);
        org.junit.Assert.assertNotNull(characteristicsSet19);
        org.junit.Assert.assertNotNull(strListFunction20);
        org.junit.Assert.assertNotNull(strListBinaryOperator21);
        org.junit.Assert.assertNotNull(strListFunction22);
        org.junit.Assert.assertNotNull(strListSupplier23);
        org.junit.Assert.assertNotNull(strListSupplier24);
        org.junit.Assert.assertNotNull(strListFunction25);
        org.junit.Assert.assertNotNull(strListBinaryOperator26);
        org.junit.Assert.assertNotNull(strListBinaryOperator27);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier3 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream7 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(strListSupplier3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsFailableStream7);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListSupplier12);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream10 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsFailableStream10);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass7 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector8 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass7);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector8.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector8.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector8.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector8.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector8.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector8.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction15 = strArrayCollector8.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector17 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector8, strCollectorBinaryOperator16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
        org.junit.Assert.assertNotNull(strListFunction15);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream13 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet12);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream14 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet12);
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(characteristicsFailableStream13);
        org.junit.Assert.assertNotNull(characteristicsFailableStream14);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction15 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
        org.junit.Assert.assertNotNull(strListFunction15);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream11 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet10);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsFailableStream11);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass9 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector10 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass9);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector10.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector10.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier13 = strArrayCollector10.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector10.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector10.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier16 = strArrayCollector10.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction17 = strArrayCollector10.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier18 = strArrayCollector10.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector20 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector10, strCollectorBinaryOperator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(strListSupplier13);
        org.junit.Assert.assertNotNull(strListFunction14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(strListSupplier16);
        org.junit.Assert.assertNotNull(strListFunction17);
        org.junit.Assert.assertNotNull(strListSupplier18);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream29 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream30 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass31 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector32 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass31);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer33 = strArrayCollector32.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet34 = strArrayCollector32.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction35 = strArrayCollector32.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator36 = strArrayCollector32.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator37 = strArrayCollector32.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction38 = strArrayCollector32.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction39 = strArrayCollector32.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet40 = strArrayCollector32.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer41 = strArrayCollector32.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier42 = strArrayCollector32.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet43 = strArrayCollector32.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector45 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector32, strCollectorBinaryOperator44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNull(strCollectorStream29);
        org.junit.Assert.assertNull(strCollectorStream30);
        org.junit.Assert.assertNotNull(strListBiConsumer33);
        org.junit.Assert.assertNotNull(characteristicsSet34);
        org.junit.Assert.assertNotNull(strListFunction35);
        org.junit.Assert.assertNotNull(strListBinaryOperator36);
        org.junit.Assert.assertNotNull(strListBinaryOperator37);
        org.junit.Assert.assertNotNull(strListFunction38);
        org.junit.Assert.assertNotNull(strListFunction39);
        org.junit.Assert.assertNotNull(characteristicsSet40);
        org.junit.Assert.assertNotNull(strListBiConsumer41);
        org.junit.Assert.assertNotNull(strListSupplier42);
        org.junit.Assert.assertNotNull(characteristicsSet43);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListSupplier14);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream12 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet11);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(characteristicsFailableStream12);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator4 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(strListBinaryOperator4);
        org.junit.Assert.assertNotNull(strListSupplier5);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass11 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector12 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass11);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector12.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer14 = strArrayCollector12.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector12.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator16 = strArrayCollector12.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer17 = strArrayCollector12.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer18 = strArrayCollector12.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet19 = strArrayCollector12.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator20 = strArrayCollector12.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer21 = strArrayCollector12.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction22 = strArrayCollector12.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector24 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector12, strCollectorBinaryOperator23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListBiConsumer14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(strListBinaryOperator16);
        org.junit.Assert.assertNotNull(strListBiConsumer17);
        org.junit.Assert.assertNotNull(strListBiConsumer18);
        org.junit.Assert.assertNotNull(characteristicsSet19);
        org.junit.Assert.assertNotNull(strListBinaryOperator20);
        org.junit.Assert.assertNotNull(strListBiConsumer21);
        org.junit.Assert.assertNotNull(strListFunction22);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream29 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream30 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream31 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream32 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream33 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream34 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream35 = strCollectorFailableStream1.stream();
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNull(strCollectorStream29);
        org.junit.Assert.assertNull(strCollectorStream30);
        org.junit.Assert.assertNull(strCollectorStream31);
        org.junit.Assert.assertNull(strCollectorStream32);
        org.junit.Assert.assertNull(strCollectorStream33);
        org.junit.Assert.assertNull(strCollectorStream34);
        org.junit.Assert.assertNull(strCollectorStream35);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass20 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector21 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass20);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction22 = strArrayCollector21.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction23 = strArrayCollector21.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer24 = strArrayCollector21.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer25 = strArrayCollector21.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier26 = strArrayCollector21.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction27 = strArrayCollector21.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction28 = strArrayCollector21.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer29 = strArrayCollector21.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier30 = strArrayCollector21.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier31 = strArrayCollector21.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector33 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector21, strCollectorBinaryOperator32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNotNull(strListFunction22);
        org.junit.Assert.assertNotNull(strListFunction23);
        org.junit.Assert.assertNotNull(strListBiConsumer24);
        org.junit.Assert.assertNotNull(strListBiConsumer25);
        org.junit.Assert.assertNotNull(strListSupplier26);
        org.junit.Assert.assertNotNull(strListFunction27);
        org.junit.Assert.assertNotNull(strListFunction28);
        org.junit.Assert.assertNotNull(strListBiConsumer29);
        org.junit.Assert.assertNotNull(strListSupplier30);
        org.junit.Assert.assertNotNull(strListSupplier31);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListFunction8);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListSupplier12);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.lang.Class<?> wildcardClass7 = characteristicsSet6.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass16 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector17 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass16);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer18 = strArrayCollector17.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet19 = strArrayCollector17.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier20 = strArrayCollector17.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet21 = strArrayCollector17.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator22 = strArrayCollector17.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier23 = strArrayCollector17.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector25 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector17, strCollectorBinaryOperator24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNotNull(strListBiConsumer18);
        org.junit.Assert.assertNotNull(characteristicsSet19);
        org.junit.Assert.assertNotNull(strListSupplier20);
        org.junit.Assert.assertNotNull(characteristicsSet21);
        org.junit.Assert.assertNotNull(strListBinaryOperator22);
        org.junit.Assert.assertNotNull(strListSupplier23);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream7 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsFailableStream7);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.lang.Class<?> wildcardClass9 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator14 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(strListBinaryOperator14);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass21 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector22 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass21);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer23 = strArrayCollector22.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet24 = strArrayCollector22.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier25 = strArrayCollector22.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction26 = strArrayCollector22.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction27 = strArrayCollector22.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet28 = strArrayCollector22.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet29 = strArrayCollector22.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction30 = strArrayCollector22.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator31 = strArrayCollector22.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction32 = strArrayCollector22.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector34 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector22, strCollectorBinaryOperator33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNotNull(strListBiConsumer23);
        org.junit.Assert.assertNotNull(characteristicsSet24);
        org.junit.Assert.assertNotNull(strListSupplier25);
        org.junit.Assert.assertNotNull(strListFunction26);
        org.junit.Assert.assertNotNull(strListFunction27);
        org.junit.Assert.assertNotNull(characteristicsSet28);
        org.junit.Assert.assertNotNull(characteristicsSet29);
        org.junit.Assert.assertNotNull(strListFunction30);
        org.junit.Assert.assertNotNull(strListBinaryOperator31);
        org.junit.Assert.assertNotNull(strListFunction32);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass14 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector15 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass14);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer16 = strArrayCollector15.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet17 = strArrayCollector15.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction18 = strArrayCollector15.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet19 = strArrayCollector15.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer20 = strArrayCollector15.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction21 = strArrayCollector15.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector23 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector15, strCollectorBinaryOperator22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNotNull(strListBiConsumer16);
        org.junit.Assert.assertNotNull(characteristicsSet17);
        org.junit.Assert.assertNotNull(strListFunction18);
        org.junit.Assert.assertNotNull(characteristicsSet19);
        org.junit.Assert.assertNotNull(strListBiConsumer20);
        org.junit.Assert.assertNotNull(strListFunction21);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction13 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet14 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector1.characteristics();
        java.lang.Class<?> wildcardClass16 = characteristicsSet15.getClass();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListFunction10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListFunction13);
        org.junit.Assert.assertNotNull(characteristicsSet14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListSupplier11);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass22 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector23 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass22);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer24 = strArrayCollector23.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet25 = strArrayCollector23.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction26 = strArrayCollector23.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator27 = strArrayCollector23.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction28 = strArrayCollector23.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier29 = strArrayCollector23.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet30 = strArrayCollector23.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet31 = strArrayCollector23.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator32 = strArrayCollector23.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet33 = strArrayCollector23.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction34 = strArrayCollector23.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet35 = strArrayCollector23.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer36 = strArrayCollector23.accumulator();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector38 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector23, strCollectorBinaryOperator37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNotNull(strListBiConsumer24);
        org.junit.Assert.assertNotNull(characteristicsSet25);
        org.junit.Assert.assertNotNull(strListFunction26);
        org.junit.Assert.assertNotNull(strListBinaryOperator27);
        org.junit.Assert.assertNotNull(strListFunction28);
        org.junit.Assert.assertNotNull(strListSupplier29);
        org.junit.Assert.assertNotNull(characteristicsSet30);
        org.junit.Assert.assertNotNull(characteristicsSet31);
        org.junit.Assert.assertNotNull(strListBinaryOperator32);
        org.junit.Assert.assertNotNull(characteristicsSet33);
        org.junit.Assert.assertNotNull(strListFunction34);
        org.junit.Assert.assertNotNull(characteristicsSet35);
        org.junit.Assert.assertNotNull(strListBiConsumer36);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier12 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier13 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListSupplier12);
        org.junit.Assert.assertNotNull(strListSupplier13);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator2 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator3 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBinaryOperator2);
        org.junit.Assert.assertNotNull(strListBinaryOperator3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer13 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier14 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer16 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListBiConsumer13);
        org.junit.Assert.assertNotNull(strListSupplier14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
        org.junit.Assert.assertNotNull(strListBiConsumer16);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream12 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet11);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream13 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet11);
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(characteristicsFailableStream12);
        org.junit.Assert.assertNotNull(characteristicsFailableStream13);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(strListFunction12);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream11 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet10);
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsFailableStream11);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer14 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer15 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListBiConsumer14);
        org.junit.Assert.assertNotNull(strListBiConsumer15);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer14 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(strListBiConsumer14);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass15 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector16 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass15);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer17 = strArrayCollector16.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet18 = strArrayCollector16.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction19 = strArrayCollector16.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator20 = strArrayCollector16.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction21 = strArrayCollector16.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier22 = strArrayCollector16.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet23 = strArrayCollector16.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet24 = strArrayCollector16.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer25 = strArrayCollector16.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet26 = strArrayCollector16.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet27 = strArrayCollector16.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier28 = strArrayCollector16.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction29 = strArrayCollector16.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier30 = strArrayCollector16.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector32 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector16, strCollectorBinaryOperator31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNotNull(strListBiConsumer17);
        org.junit.Assert.assertNotNull(characteristicsSet18);
        org.junit.Assert.assertNotNull(strListFunction19);
        org.junit.Assert.assertNotNull(strListBinaryOperator20);
        org.junit.Assert.assertNotNull(strListFunction21);
        org.junit.Assert.assertNotNull(strListSupplier22);
        org.junit.Assert.assertNotNull(characteristicsSet23);
        org.junit.Assert.assertNotNull(characteristicsSet24);
        org.junit.Assert.assertNotNull(strListBiConsumer25);
        org.junit.Assert.assertNotNull(characteristicsSet26);
        org.junit.Assert.assertNotNull(characteristicsSet27);
        org.junit.Assert.assertNotNull(strListSupplier28);
        org.junit.Assert.assertNotNull(strListFunction29);
        org.junit.Assert.assertNotNull(strListSupplier30);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier5 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListSupplier5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream14 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet13);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream15 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet13);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream16 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet13);
        java.lang.Class<?> wildcardClass17 = characteristicsFailableStream16.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
        org.junit.Assert.assertNotNull(characteristicsFailableStream14);
        org.junit.Assert.assertNotNull(characteristicsFailableStream15);
        org.junit.Assert.assertNotNull(characteristicsFailableStream16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction10 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListFunction10);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet13 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListFunction12);
        org.junit.Assert.assertNotNull(characteristicsSet13);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass12 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector13 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass12);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer14 = strArrayCollector13.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet15 = strArrayCollector13.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction16 = strArrayCollector13.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator17 = strArrayCollector13.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction18 = strArrayCollector13.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier19 = strArrayCollector13.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer20 = strArrayCollector13.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction21 = strArrayCollector13.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator22 = strArrayCollector13.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector24 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector13, strCollectorBinaryOperator23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNotNull(strListBiConsumer14);
        org.junit.Assert.assertNotNull(characteristicsSet15);
        org.junit.Assert.assertNotNull(strListFunction16);
        org.junit.Assert.assertNotNull(strListBinaryOperator17);
        org.junit.Assert.assertNotNull(strListFunction18);
        org.junit.Assert.assertNotNull(strListSupplier19);
        org.junit.Assert.assertNotNull(strListBiConsumer20);
        org.junit.Assert.assertNotNull(strListFunction21);
        org.junit.Assert.assertNotNull(strListBinaryOperator22);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.lang.Class<?> wildcardClass9 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator12 = strArrayCollector1.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListBinaryOperator12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet5 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(characteristicsSet5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListSupplier9);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator11 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListBinaryOperator11);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator4 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(strListBinaryOperator4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.lang.Class<?> wildcardClass11 = strArrayCollector1.getClass();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream29 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream30 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream31 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream32 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream33 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass34 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector35 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass34);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer36 = strArrayCollector35.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet37 = strArrayCollector35.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction38 = strArrayCollector35.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator39 = strArrayCollector35.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction40 = strArrayCollector35.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer41 = strArrayCollector35.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier42 = strArrayCollector35.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet43 = strArrayCollector35.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector45 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector35, strCollectorBinaryOperator44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNull(strCollectorStream29);
        org.junit.Assert.assertNull(strCollectorStream30);
        org.junit.Assert.assertNull(strCollectorStream31);
        org.junit.Assert.assertNull(strCollectorStream32);
        org.junit.Assert.assertNull(strCollectorStream33);
        org.junit.Assert.assertNotNull(strListBiConsumer36);
        org.junit.Assert.assertNotNull(characteristicsSet37);
        org.junit.Assert.assertNotNull(strListFunction38);
        org.junit.Assert.assertNotNull(strListBinaryOperator39);
        org.junit.Assert.assertNotNull(strListFunction40);
        org.junit.Assert.assertNotNull(strListBiConsumer41);
        org.junit.Assert.assertNotNull(strListSupplier42);
        org.junit.Assert.assertNotNull(characteristicsSet43);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier11 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator13 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet14 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator15 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListSupplier11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
        org.junit.Assert.assertNotNull(strListBinaryOperator13);
        org.junit.Assert.assertNotNull(characteristicsSet14);
        org.junit.Assert.assertNotNull(strListBinaryOperator15);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.lang.Class<?> wildcardClass11 = strListBiConsumer10.getClass();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction7 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListFunction7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream25 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream26 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream27 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream28 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass29 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector30 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass29);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet31 = strArrayCollector30.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction32 = strArrayCollector30.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction33 = strArrayCollector30.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction34 = strArrayCollector30.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction35 = strArrayCollector30.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier36 = strArrayCollector30.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction37 = strArrayCollector30.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector39 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector30, strCollectorBinaryOperator38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNull(strCollectorStream25);
        org.junit.Assert.assertNull(strCollectorStream26);
        org.junit.Assert.assertNull(strCollectorStream27);
        org.junit.Assert.assertNull(strCollectorStream28);
        org.junit.Assert.assertNotNull(characteristicsSet31);
        org.junit.Assert.assertNotNull(strListFunction32);
        org.junit.Assert.assertNotNull(strListFunction33);
        org.junit.Assert.assertNotNull(strListFunction34);
        org.junit.Assert.assertNotNull(strListFunction35);
        org.junit.Assert.assertNotNull(strListSupplier36);
        org.junit.Assert.assertNotNull(strListFunction37);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator8 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListBinaryOperator8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator10 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer12 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(strListBinaryOperator10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(strListBiConsumer12);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet11 = strArrayCollector1.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier13 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction14 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier15 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction16 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(characteristicsSet11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(strListSupplier13);
        org.junit.Assert.assertNotNull(strListFunction14);
        org.junit.Assert.assertNotNull(strListSupplier15);
        org.junit.Assert.assertNotNull(strListFunction16);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer9 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListBiConsumer9);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream24 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass25 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector26 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass25);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer27 = strArrayCollector26.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet28 = strArrayCollector26.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction29 = strArrayCollector26.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator30 = strArrayCollector26.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction31 = strArrayCollector26.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier32 = strArrayCollector26.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier33 = strArrayCollector26.supplier();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator34 = strArrayCollector26.combiner();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator35 = strArrayCollector26.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction36 = strArrayCollector26.finisher();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector38 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector26, strCollectorBinaryOperator37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNull(strCollectorStream24);
        org.junit.Assert.assertNotNull(strListBiConsumer27);
        org.junit.Assert.assertNotNull(characteristicsSet28);
        org.junit.Assert.assertNotNull(strListFunction29);
        org.junit.Assert.assertNotNull(strListBinaryOperator30);
        org.junit.Assert.assertNotNull(strListFunction31);
        org.junit.Assert.assertNotNull(strListSupplier32);
        org.junit.Assert.assertNotNull(strListSupplier33);
        org.junit.Assert.assertNotNull(strListBinaryOperator34);
        org.junit.Assert.assertNotNull(strListBinaryOperator35);
        org.junit.Assert.assertNotNull(strListFunction36);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction2 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer4 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        org.junit.Assert.assertNotNull(strListFunction2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListBiConsumer4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator7 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction9 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet10 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer11 = strArrayCollector1.accumulator();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListBinaryOperator7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListFunction9);
        org.junit.Assert.assertNotNull(characteristicsSet10);
        org.junit.Assert.assertNotNull(strListBiConsumer11);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier6 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector1.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListSupplier6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction5 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction8 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector1.supplier();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet12 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier13 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListFunction5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListFunction8);
        org.junit.Assert.assertNotNull(strListSupplier9);
        org.junit.Assert.assertNotNull(strListSupplier10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(characteristicsSet12);
        org.junit.Assert.assertNotNull(strListSupplier13);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass3 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector4 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass3);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector4.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector4.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector4.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet8 = strArrayCollector4.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator9 = strArrayCollector4.combiner();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier10 = strArrayCollector4.supplier();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector12 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector4, strCollectorBinaryOperator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(characteristicsSet8);
        org.junit.Assert.assertNotNull(strListBinaryOperator9);
        org.junit.Assert.assertNotNull(strListSupplier10);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier4 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer6 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet7 = strArrayCollector1.characteristics();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier9 = strArrayCollector1.supplier();
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListSupplier4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListBiConsumer6);
        org.junit.Assert.assertNotNull(characteristicsSet7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(strListSupplier9);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream21 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream22 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream23 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass24 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector25 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass24);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer26 = strArrayCollector25.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet27 = strArrayCollector25.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction28 = strArrayCollector25.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator29 = strArrayCollector25.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction30 = strArrayCollector25.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier31 = strArrayCollector25.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet32 = strArrayCollector25.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet33 = strArrayCollector25.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator34 = strArrayCollector25.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet35 = strArrayCollector25.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet36 = strArrayCollector25.characteristics();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector38 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector25, strCollectorBinaryOperator37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNull(strCollectorStream21);
        org.junit.Assert.assertNull(strCollectorStream22);
        org.junit.Assert.assertNull(strCollectorStream23);
        org.junit.Assert.assertNotNull(strListBiConsumer26);
        org.junit.Assert.assertNotNull(characteristicsSet27);
        org.junit.Assert.assertNotNull(strListFunction28);
        org.junit.Assert.assertNotNull(strListBinaryOperator29);
        org.junit.Assert.assertNotNull(strListFunction30);
        org.junit.Assert.assertNotNull(strListSupplier31);
        org.junit.Assert.assertNotNull(characteristicsSet32);
        org.junit.Assert.assertNotNull(characteristicsSet33);
        org.junit.Assert.assertNotNull(strListBinaryOperator34);
        org.junit.Assert.assertNotNull(characteristicsSet35);
        org.junit.Assert.assertNotNull(characteristicsSet36);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer2 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet3 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction6 = strArrayCollector1.finisher();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier7 = strArrayCollector1.supplier();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer8 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer10 = strArrayCollector1.accumulator();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction11 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction12 = strArrayCollector1.finisher();
        org.junit.Assert.assertNotNull(strListBiConsumer2);
        org.junit.Assert.assertNotNull(characteristicsSet3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(strListFunction6);
        org.junit.Assert.assertNotNull(strListSupplier7);
        org.junit.Assert.assertNotNull(strListBiConsumer8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(strListBiConsumer10);
        org.junit.Assert.assertNotNull(strListFunction11);
        org.junit.Assert.assertNotNull(strListFunction12);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet2 = strArrayCollector1.characteristics();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction3 = strArrayCollector1.finisher();
        java.util.function.Function<java.util.List<java.lang.String>, java.lang.String[]> strListFunction4 = strArrayCollector1.finisher();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator5 = strArrayCollector1.combiner();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet6 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer7 = strArrayCollector1.accumulator();
        java.util.function.Supplier<java.util.List<java.lang.String>> strListSupplier8 = strArrayCollector1.supplier();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet9 = strArrayCollector1.characteristics();
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream10 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet9);
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector.Characteristics> characteristicsFailableStream11 = org.apache.commons.lang3.Streams.stream((java.util.Collection<java.util.stream.Collector.Characteristics>) characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsSet2);
        org.junit.Assert.assertNotNull(strListFunction3);
        org.junit.Assert.assertNotNull(strListFunction4);
        org.junit.Assert.assertNotNull(strListBinaryOperator5);
        org.junit.Assert.assertNotNull(characteristicsSet6);
        org.junit.Assert.assertNotNull(strListBiConsumer7);
        org.junit.Assert.assertNotNull(strListSupplier8);
        org.junit.Assert.assertNotNull(characteristicsSet9);
        org.junit.Assert.assertNotNull(characteristicsFailableStream10);
        org.junit.Assert.assertNotNull(characteristicsFailableStream11);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        java.lang.Class<java.lang.String> strClass0 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector1 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass0);
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator2 = strArrayCollector1.combiner();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer3 = strArrayCollector1.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet4 = strArrayCollector1.characteristics();
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer5 = strArrayCollector1.accumulator();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator6 = strArrayCollector1.combiner();
        org.junit.Assert.assertNotNull(strListBinaryOperator2);
        org.junit.Assert.assertNotNull(strListBiConsumer3);
        org.junit.Assert.assertNotNull(characteristicsSet4);
        org.junit.Assert.assertNotNull(strListBiConsumer5);
        org.junit.Assert.assertNotNull(strListBinaryOperator6);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream0 = null;
        org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorFailableStream1 = new org.apache.commons.lang3.Streams.FailableStream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>>(strCollectorStream0);
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream2 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream3 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream4 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream5 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream6 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream7 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream8 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream9 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream10 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream11 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream12 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream13 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream14 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream15 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream16 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream17 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream18 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream19 = strCollectorFailableStream1.stream();
        java.util.stream.Stream<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorStream20 = strCollectorFailableStream1.stream();
        java.lang.Class<java.lang.String> strClass21 = null;
        org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String> strArrayCollector22 = new org.apache.commons.lang3.Streams.ArrayCollector<java.lang.String>(strClass21);
        java.util.function.BiConsumer<java.util.List<java.lang.String>, java.lang.String> strListBiConsumer23 = strArrayCollector22.accumulator();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet24 = strArrayCollector22.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet25 = strArrayCollector22.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet26 = strArrayCollector22.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet27 = strArrayCollector22.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet28 = strArrayCollector22.characteristics();
        java.util.Set<java.util.stream.Collector.Characteristics> characteristicsSet29 = strArrayCollector22.characteristics();
        java.util.function.BinaryOperator<java.util.List<java.lang.String>> strListBinaryOperator30 = strArrayCollector22.combiner();
        java.util.function.BinaryOperator<java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>> strCollectorBinaryOperator31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]> strCollector32 = strCollectorFailableStream1.reduce((java.util.stream.Collector<java.lang.String, java.util.List<java.lang.String>, java.lang.String[]>) strArrayCollector22, strCollectorBinaryOperator31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strCollectorStream2);
        org.junit.Assert.assertNull(strCollectorStream3);
        org.junit.Assert.assertNull(strCollectorStream4);
        org.junit.Assert.assertNull(strCollectorStream5);
        org.junit.Assert.assertNull(strCollectorStream6);
        org.junit.Assert.assertNull(strCollectorStream7);
        org.junit.Assert.assertNull(strCollectorStream8);
        org.junit.Assert.assertNull(strCollectorStream9);
        org.junit.Assert.assertNull(strCollectorStream10);
        org.junit.Assert.assertNull(strCollectorStream11);
        org.junit.Assert.assertNull(strCollectorStream12);
        org.junit.Assert.assertNull(strCollectorStream13);
        org.junit.Assert.assertNull(strCollectorStream14);
        org.junit.Assert.assertNull(strCollectorStream15);
        org.junit.Assert.assertNull(strCollectorStream16);
        org.junit.Assert.assertNull(strCollectorStream17);
        org.junit.Assert.assertNull(strCollectorStream18);
        org.junit.Assert.assertNull(strCollectorStream19);
        org.junit.Assert.assertNull(strCollectorStream20);
        org.junit.Assert.assertNotNull(strListBiConsumer23);
        org.junit.Assert.assertNotNull(characteristicsSet24);
        org.junit.Assert.assertNotNull(characteristicsSet25);
        org.junit.Assert.assertNotNull(characteristicsSet26);
        org.junit.Assert.assertNotNull(characteristicsSet27);
        org.junit.Assert.assertNotNull(characteristicsSet28);
        org.junit.Assert.assertNotNull(characteristicsSet29);
        org.junit.Assert.assertNotNull(strListBinaryOperator30);
    }
}

