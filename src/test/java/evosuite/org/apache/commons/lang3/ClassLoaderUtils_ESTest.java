/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was automatically generated by EvoSuite
 * Fri May 12 15:16:36 GMT 2023
 */

package evosuite.org.apache.commons.lang3;

import evosuite.org.apache.commons.lang3.ClassLoaderUtils_ESTest_scaffolding;
import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URL;
import java.net.URLClassLoader;
import org.apache.commons.lang3.ClassLoaderUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClassLoaderUtils_ESTest extends ClassLoaderUtils_ESTest_scaffolding {

  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        ClassLoaderUtils.toString((URLClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.ClassLoaderUtils", e);
      }
  }

  @Test
  public void test1()  throws Throwable  {
      URL[] uRLArray0 = ClassLoaderUtils.getSystemURLs();
      URLClassLoader uRLClassLoader0 = URLClassLoader.newInstance(uRLArray0);
      String string0 = ClassLoaderUtils.toString((ClassLoader) uRLClassLoader0);
      assertNotNull(string0);
  }

  /*@Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ClassLoaderUtils.toString((ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }*/

  @Test
  public void test3()  throws Throwable  {
      ClassLoaderUtils classLoaderUtils0 = new ClassLoaderUtils();
  }

  @Test
  public void test4()  throws Throwable  {
      URL[] uRLArray0 = ClassLoaderUtils.getSystemURLs();
      URLClassLoader uRLClassLoader0 = URLClassLoader.newInstance(uRLArray0);
      String string0 = ClassLoaderUtils.toString(uRLClassLoader0);
      assertNotNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      URL[] uRLArray0 = ClassLoaderUtils.getThreadURLs();
      assertEquals(0, uRLArray0.length);
  }
}
