/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was automatically generated by EvoSuite
 * Fri May 12 15:18:09 GMT 2023
 */

package evosuite.org.apache.commons.lang3;

import evosuite.org.apache.commons.lang3.Streams_ESTest_scaffolding;
import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;
import java.util.stream.Collector;
import org.apache.commons.lang3.Streams;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Streams_ESTest extends Streams_ESTest_scaffolding {

  @Test
  public void test0()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Collector<Object, ?, Object[]> collector0 = Streams.toArray(class0);
      assertNotNull(collector0);
  }

  @Test
  public void test1()  throws Throwable  {
      Streams streams0 = new Streams();
  }
}
